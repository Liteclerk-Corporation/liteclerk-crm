#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace easyfiscrm_api.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="easyfis_easyfis")]
	public partial class easyfiscrmdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertCrmMstProduct(CrmMstProduct instance);
    partial void UpdateCrmMstProduct(CrmMstProduct instance);
    partial void DeleteCrmMstProduct(CrmMstProduct instance);
    partial void InsertCrmTrnActivity(CrmTrnActivity instance);
    partial void UpdateCrmTrnActivity(CrmTrnActivity instance);
    partial void DeleteCrmTrnActivity(CrmTrnActivity instance);
    partial void InsertCrmTrnSalesDelivery(CrmTrnSalesDelivery instance);
    partial void UpdateCrmTrnSalesDelivery(CrmTrnSalesDelivery instance);
    partial void DeleteCrmTrnSalesDelivery(CrmTrnSalesDelivery instance);
    partial void InsertMstAccount(MstAccount instance);
    partial void UpdateMstAccount(MstAccount instance);
    partial void DeleteMstAccount(MstAccount instance);
    partial void InsertMstArticle(MstArticle instance);
    partial void UpdateMstArticle(MstArticle instance);
    partial void DeleteMstArticle(MstArticle instance);
    partial void InsertMstArticleType(MstArticleType instance);
    partial void UpdateMstArticleType(MstArticleType instance);
    partial void DeleteMstArticleType(MstArticleType instance);
    partial void InsertMstBranch(MstBranch instance);
    partial void UpdateMstBranch(MstBranch instance);
    partial void DeleteMstBranch(MstBranch instance);
    partial void InsertMstTerm(MstTerm instance);
    partial void UpdateMstTerm(MstTerm instance);
    partial void DeleteMstTerm(MstTerm instance);
    partial void InsertMstUnit(MstUnit instance);
    partial void UpdateMstUnit(MstUnit instance);
    partial void DeleteMstUnit(MstUnit instance);
    partial void InsertTrnSalesInvoice(TrnSalesInvoice instance);
    partial void UpdateTrnSalesInvoice(TrnSalesInvoice instance);
    partial void DeleteTrnSalesInvoice(TrnSalesInvoice instance);
    partial void InsertMstArticleGroup(MstArticleGroup instance);
    partial void UpdateMstArticleGroup(MstArticleGroup instance);
    partial void DeleteMstArticleGroup(MstArticleGroup instance);
    partial void InsertMstStatus(MstStatus instance);
    partial void UpdateMstStatus(MstStatus instance);
    partial void DeleteMstStatus(MstStatus instance);
    partial void InsertMstTaxType(MstTaxType instance);
    partial void UpdateMstTaxType(MstTaxType instance);
    partial void DeleteMstTaxType(MstTaxType instance);
    partial void InsertMstCompany(MstCompany instance);
    partial void UpdateMstCompany(MstCompany instance);
    partial void DeleteMstCompany(MstCompany instance);
    partial void InsertSysForm(SysForm instance);
    partial void UpdateSysForm(SysForm instance);
    partial void DeleteSysForm(SysForm instance);
    partial void InsertMstUserForm(MstUserForm instance);
    partial void UpdateMstUserForm(MstUserForm instance);
    partial void DeleteMstUserForm(MstUserForm instance);
    partial void InsertMstUser(MstUser instance);
    partial void UpdateMstUser(MstUser instance);
    partial void DeleteMstUser(MstUser instance);
    partial void InsertCrmMstDocument(CrmMstDocument instance);
    partial void UpdateCrmMstDocument(CrmMstDocument instance);
    partial void DeleteCrmMstDocument(CrmMstDocument instance);
    partial void InsertCrmTrnSupportAttachment(CrmTrnSupportAttachment instance);
    partial void UpdateCrmTrnSupportAttachment(CrmTrnSupportAttachment instance);
    partial void DeleteCrmTrnSupportAttachment(CrmTrnSupportAttachment instance);
    partial void InsertCrmTrnSupport(CrmTrnSupport instance);
    partial void UpdateCrmTrnSupport(CrmTrnSupport instance);
    partial void DeleteCrmTrnSupport(CrmTrnSupport instance);
    partial void InsertCrmTrnLead(CrmTrnLead instance);
    partial void UpdateCrmTrnLead(CrmTrnLead instance);
    partial void DeleteCrmTrnLead(CrmTrnLead instance);
    partial void InsertCrmTrnSoftwareDevelopment(CrmTrnSoftwareDevelopment instance);
    partial void UpdateCrmTrnSoftwareDevelopment(CrmTrnSoftwareDevelopment instance);
    partial void DeleteCrmTrnSoftwareDevelopment(CrmTrnSoftwareDevelopment instance);
    #endregion
		
		public easyfiscrmdbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public easyfiscrmdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public easyfiscrmdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public easyfiscrmdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public easyfiscrmdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<CrmMstProduct> CrmMstProducts
		{
			get
			{
				return this.GetTable<CrmMstProduct>();
			}
		}
		
		public System.Data.Linq.Table<CrmTrnActivity> CrmTrnActivities
		{
			get
			{
				return this.GetTable<CrmTrnActivity>();
			}
		}
		
		public System.Data.Linq.Table<CrmTrnSalesDelivery> CrmTrnSalesDeliveries
		{
			get
			{
				return this.GetTable<CrmTrnSalesDelivery>();
			}
		}
		
		public System.Data.Linq.Table<MstAccount> MstAccounts
		{
			get
			{
				return this.GetTable<MstAccount>();
			}
		}
		
		public System.Data.Linq.Table<MstArticle> MstArticles
		{
			get
			{
				return this.GetTable<MstArticle>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleType> MstArticleTypes
		{
			get
			{
				return this.GetTable<MstArticleType>();
			}
		}
		
		public System.Data.Linq.Table<MstBranch> MstBranches
		{
			get
			{
				return this.GetTable<MstBranch>();
			}
		}
		
		public System.Data.Linq.Table<MstTerm> MstTerms
		{
			get
			{
				return this.GetTable<MstTerm>();
			}
		}
		
		public System.Data.Linq.Table<MstUnit> MstUnits
		{
			get
			{
				return this.GetTable<MstUnit>();
			}
		}
		
		public System.Data.Linq.Table<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this.GetTable<TrnSalesInvoice>();
			}
		}
		
		public System.Data.Linq.Table<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this.GetTable<MstArticleGroup>();
			}
		}
		
		public System.Data.Linq.Table<MstStatus> MstStatus
		{
			get
			{
				return this.GetTable<MstStatus>();
			}
		}
		
		public System.Data.Linq.Table<MstTaxType> MstTaxTypes
		{
			get
			{
				return this.GetTable<MstTaxType>();
			}
		}
		
		public System.Data.Linq.Table<MstCompany> MstCompanies
		{
			get
			{
				return this.GetTable<MstCompany>();
			}
		}
		
		public System.Data.Linq.Table<SysForm> SysForms
		{
			get
			{
				return this.GetTable<SysForm>();
			}
		}
		
		public System.Data.Linq.Table<MstUserForm> MstUserForms
		{
			get
			{
				return this.GetTable<MstUserForm>();
			}
		}
		
		public System.Data.Linq.Table<MstUser> MstUsers
		{
			get
			{
				return this.GetTable<MstUser>();
			}
		}
		
		public System.Data.Linq.Table<CrmMstDocument> CrmMstDocuments
		{
			get
			{
				return this.GetTable<CrmMstDocument>();
			}
		}
		
		public System.Data.Linq.Table<CrmTrnSupportAttachment> CrmTrnSupportAttachments
		{
			get
			{
				return this.GetTable<CrmTrnSupportAttachment>();
			}
		}
		
		public System.Data.Linq.Table<CrmTrnSupport> CrmTrnSupports
		{
			get
			{
				return this.GetTable<CrmTrnSupport>();
			}
		}
		
		public System.Data.Linq.Table<CrmTrnLead> CrmTrnLeads
		{
			get
			{
				return this.GetTable<CrmTrnLead>();
			}
		}
		
		public System.Data.Linq.Table<CrmTrnSoftwareDevelopment> CrmTrnSoftwareDevelopments
		{
			get
			{
				return this.GetTable<CrmTrnSoftwareDevelopment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _User_Id;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUser_IdChanging(string value);
    partial void OnUser_IdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="User_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._User_Id = value.Id;
					}
					else
					{
						this._User_Id = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _User_Id;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUser_IdChanging(string value);
    partial void OnUser_IdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="User_Id", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._User_Id = value.Id;
					}
					else
					{
						this._User_Id = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _FullName;
		
		private string _Address;
		
		private string _Email;
		
		private System.Nullable<bool> _EmailConfirmed;
		
		private string _UserName;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private System.Nullable<bool> _PhoneNumberConfirmed;
		
		private System.Nullable<bool> _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private System.Nullable<bool> _LockoutEnabled;
		
		private System.Nullable<int> _AccessFailedCount;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
		private EntitySet<MstUser> _MstUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(System.Nullable<bool> value);
    partial void OnEmailConfirmedChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(System.Nullable<bool> value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(System.Nullable<bool> value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(System.Nullable<bool> value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(System.Nullable<int> value);
    partial void OnAccessFailedCountChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit")]
		public System.Nullable<bool> EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit")]
		public System.Nullable<bool> PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit")]
		public System.Nullable<bool> TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit")]
		public System.Nullable<bool> LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int")]
		public System.Nullable<int> AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="User_Id")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="User_Id")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmMstProduct")]
	public partial class CrmMstProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ProductCode;
		
		private string _ProductDescription;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<CrmTrnSalesDelivery> _CrmTrnSalesDeliveries;
		
		private EntitySet<CrmTrnLead> _CrmTrnLeads;
		
		private EntitySet<CrmTrnSoftwareDevelopment> _CrmTrnSoftwareDevelopments;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnProductCodeChanging(string value);
    partial void OnProductCodeChanged();
    partial void OnProductDescriptionChanging(string value);
    partial void OnProductDescriptionChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public CrmMstProduct()
		{
			this._CrmTrnSalesDeliveries = new EntitySet<CrmTrnSalesDelivery>(new Action<CrmTrnSalesDelivery>(this.attach_CrmTrnSalesDeliveries), new Action<CrmTrnSalesDelivery>(this.detach_CrmTrnSalesDeliveries));
			this._CrmTrnLeads = new EntitySet<CrmTrnLead>(new Action<CrmTrnLead>(this.attach_CrmTrnLeads), new Action<CrmTrnLead>(this.detach_CrmTrnLeads));
			this._CrmTrnSoftwareDevelopments = new EntitySet<CrmTrnSoftwareDevelopment>(new Action<CrmTrnSoftwareDevelopment>(this.attach_CrmTrnSoftwareDevelopments), new Action<CrmTrnSoftwareDevelopment>(this.detach_CrmTrnSoftwareDevelopments));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductCode
		{
			get
			{
				return this._ProductCode;
			}
			set
			{
				if ((this._ProductCode != value))
				{
					this.OnProductCodeChanging(value);
					this.SendPropertyChanging();
					this._ProductCode = value;
					this.SendPropertyChanged("ProductCode");
					this.OnProductCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ProductDescription
		{
			get
			{
				return this._ProductDescription;
			}
			set
			{
				if ((this._ProductDescription != value))
				{
					this.OnProductDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ProductDescription = value;
					this.SendPropertyChanged("ProductDescription");
					this.OnProductDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmMstProduct_CrmTrnSalesDelivery", Storage="_CrmTrnSalesDeliveries", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<CrmTrnSalesDelivery> CrmTrnSalesDeliveries
		{
			get
			{
				return this._CrmTrnSalesDeliveries;
			}
			set
			{
				this._CrmTrnSalesDeliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmMstProduct_CrmTrnLead", Storage="_CrmTrnLeads", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<CrmTrnLead> CrmTrnLeads
		{
			get
			{
				return this._CrmTrnLeads;
			}
			set
			{
				this._CrmTrnLeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmMstProduct_CrmTrnSoftwareDevelopment", Storage="_CrmTrnSoftwareDevelopments", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<CrmTrnSoftwareDevelopment> CrmTrnSoftwareDevelopments
		{
			get
			{
				return this._CrmTrnSoftwareDevelopments;
			}
			set
			{
				this._CrmTrnSoftwareDevelopments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstProduct", Storage="_MstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.CrmMstProducts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.CrmMstProducts.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstProduct1", Storage="_MstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.CrmMstProducts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.CrmMstProducts1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.CrmMstProduct = this;
		}
		
		private void detach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.CrmMstProduct = null;
		}
		
		private void attach_CrmTrnLeads(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.CrmMstProduct = this;
		}
		
		private void detach_CrmTrnLeads(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.CrmMstProduct = null;
		}
		
		private void attach_CrmTrnSoftwareDevelopments(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.CrmMstProduct = this;
		}
		
		private void detach_CrmTrnSoftwareDevelopments(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.CrmMstProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmTrnActivity")]
	public partial class CrmTrnActivity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ACNumber;
		
		private System.DateTime _ACDate;
		
		private int _UserId;
		
		private System.Nullable<int> _FunctionalUserId;
		
		private System.Nullable<int> _TechnicalUserId;
		
		private string _CRMStatus;
		
		private string _Activity;
		
		private System.DateTime _StartDateTime;
		
		private System.DateTime _EndDateTime;
		
		private decimal _TransportationCost;
		
		private decimal _OnSiteCost;
		
		private System.Nullable<int> _LDId;
		
		private System.Nullable<int> _SDId;
		
		private System.Nullable<int> _SPId;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<CrmTrnSalesDelivery> _CrmTrnSalesDelivery;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<CrmTrnSupport> _CrmTrnSupport;
		
		private EntityRef<CrmTrnLead> _CrmTrnLead;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnACNumberChanging(string value);
    partial void OnACNumberChanged();
    partial void OnACDateChanging(System.DateTime value);
    partial void OnACDateChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFunctionalUserIdChanging(System.Nullable<int> value);
    partial void OnFunctionalUserIdChanged();
    partial void OnTechnicalUserIdChanging(System.Nullable<int> value);
    partial void OnTechnicalUserIdChanged();
    partial void OnCRMStatusChanging(string value);
    partial void OnCRMStatusChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnStartDateTimeChanging(System.DateTime value);
    partial void OnStartDateTimeChanged();
    partial void OnEndDateTimeChanging(System.DateTime value);
    partial void OnEndDateTimeChanged();
    partial void OnTransportationCostChanging(decimal value);
    partial void OnTransportationCostChanged();
    partial void OnOnSiteCostChanging(decimal value);
    partial void OnOnSiteCostChanged();
    partial void OnLDIdChanging(System.Nullable<int> value);
    partial void OnLDIdChanged();
    partial void OnSDIdChanging(System.Nullable<int> value);
    partial void OnSDIdChanged();
    partial void OnSPIdChanging(System.Nullable<int> value);
    partial void OnSPIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public CrmTrnActivity()
		{
			this._CrmTrnSalesDelivery = default(EntityRef<CrmTrnSalesDelivery>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._CrmTrnSupport = default(EntityRef<CrmTrnSupport>);
			this._CrmTrnLead = default(EntityRef<CrmTrnLead>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ACNumber
		{
			get
			{
				return this._ACNumber;
			}
			set
			{
				if ((this._ACNumber != value))
				{
					this.OnACNumberChanging(value);
					this.SendPropertyChanging();
					this._ACNumber = value;
					this.SendPropertyChanged("ACNumber");
					this.OnACNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACDate", DbType="DateTime NOT NULL")]
		public System.DateTime ACDate
		{
			get
			{
				return this._ACDate;
			}
			set
			{
				if ((this._ACDate != value))
				{
					this.OnACDateChanging(value);
					this.SendPropertyChanging();
					this._ACDate = value;
					this.SendPropertyChanged("ACDate");
					this.OnACDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionalUserId", DbType="Int")]
		public System.Nullable<int> FunctionalUserId
		{
			get
			{
				return this._FunctionalUserId;
			}
			set
			{
				if ((this._FunctionalUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctionalUserIdChanging(value);
					this.SendPropertyChanging();
					this._FunctionalUserId = value;
					this.SendPropertyChanged("FunctionalUserId");
					this.OnFunctionalUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalUserId", DbType="Int")]
		public System.Nullable<int> TechnicalUserId
		{
			get
			{
				return this._TechnicalUserId;
			}
			set
			{
				if ((this._TechnicalUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicalUserIdChanging(value);
					this.SendPropertyChanging();
					this._TechnicalUserId = value;
					this.SendPropertyChanged("TechnicalUserId");
					this.OnTechnicalUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CRMStatus
		{
			get
			{
				return this._CRMStatus;
			}
			set
			{
				if ((this._CRMStatus != value))
				{
					this.OnCRMStatusChanging(value);
					this.SendPropertyChanging();
					this._CRMStatus = value;
					this.SendPropertyChanged("CRMStatus");
					this.OnCRMStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartDateTime
		{
			get
			{
				return this._StartDateTime;
			}
			set
			{
				if ((this._StartDateTime != value))
				{
					this.OnStartDateTimeChanging(value);
					this.SendPropertyChanging();
					this._StartDateTime = value;
					this.SendPropertyChanged("StartDateTime");
					this.OnStartDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndDateTime
		{
			get
			{
				return this._EndDateTime;
			}
			set
			{
				if ((this._EndDateTime != value))
				{
					this.OnEndDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EndDateTime = value;
					this.SendPropertyChanged("EndDateTime");
					this.OnEndDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransportationCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal TransportationCost
		{
			get
			{
				return this._TransportationCost;
			}
			set
			{
				if ((this._TransportationCost != value))
				{
					this.OnTransportationCostChanging(value);
					this.SendPropertyChanging();
					this._TransportationCost = value;
					this.SendPropertyChanged("TransportationCost");
					this.OnTransportationCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnSiteCost", DbType="Decimal(18,5) NOT NULL")]
		public decimal OnSiteCost
		{
			get
			{
				return this._OnSiteCost;
			}
			set
			{
				if ((this._OnSiteCost != value))
				{
					this.OnOnSiteCostChanging(value);
					this.SendPropertyChanging();
					this._OnSiteCost = value;
					this.SendPropertyChanged("OnSiteCost");
					this.OnOnSiteCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDId", DbType="Int")]
		public System.Nullable<int> LDId
		{
			get
			{
				return this._LDId;
			}
			set
			{
				if ((this._LDId != value))
				{
					if (this._CrmTrnLead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLDIdChanging(value);
					this.SendPropertyChanging();
					this._LDId = value;
					this.SendPropertyChanged("LDId");
					this.OnLDIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDId", DbType="Int")]
		public System.Nullable<int> SDId
		{
			get
			{
				return this._SDId;
			}
			set
			{
				if ((this._SDId != value))
				{
					if (this._CrmTrnSalesDelivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSDIdChanging(value);
					this.SendPropertyChanging();
					this._SDId = value;
					this.SendPropertyChanged("SDId");
					this.OnSDIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPId", DbType="Int")]
		public System.Nullable<int> SPId
		{
			get
			{
				return this._SPId;
			}
			set
			{
				if ((this._SPId != value))
				{
					if (this._CrmTrnSupport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPIdChanging(value);
					this.SendPropertyChanging();
					this._SPId = value;
					this.SendPropertyChanged("SPId");
					this.OnSPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSalesDelivery_CrmTrnActivity", Storage="_CrmTrnSalesDelivery", ThisKey="SDId", OtherKey="Id", IsForeignKey=true)]
		public CrmTrnSalesDelivery CrmTrnSalesDelivery
		{
			get
			{
				return this._CrmTrnSalesDelivery.Entity;
			}
			set
			{
				CrmTrnSalesDelivery previousValue = this._CrmTrnSalesDelivery.Entity;
				if (((previousValue != value) 
							|| (this._CrmTrnSalesDelivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmTrnSalesDelivery.Entity = null;
						previousValue.CrmTrnActivities.Remove(this);
					}
					this._CrmTrnSalesDelivery.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities.Add(this);
						this._SDId = value.Id;
					}
					else
					{
						this._SDId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CrmTrnSalesDelivery");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.CrmTrnActivities.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity1", Storage="_MstUser1", ThisKey="FunctionalUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.CrmTrnActivities1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities1.Add(this);
						this._FunctionalUserId = value.Id;
					}
					else
					{
						this._FunctionalUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity2", Storage="_MstUser2", ThisKey="TechnicalUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.CrmTrnActivities2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities2.Add(this);
						this._TechnicalUserId = value.Id;
					}
					else
					{
						this._TechnicalUserId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity3", Storage="_MstUser3", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.CrmTrnActivities3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities3.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity4", Storage="_MstUser4", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.CrmTrnActivities4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities4.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSupport_CrmTrnActivity", Storage="_CrmTrnSupport", ThisKey="SPId", OtherKey="Id", IsForeignKey=true)]
		public CrmTrnSupport CrmTrnSupport
		{
			get
			{
				return this._CrmTrnSupport.Entity;
			}
			set
			{
				CrmTrnSupport previousValue = this._CrmTrnSupport.Entity;
				if (((previousValue != value) 
							|| (this._CrmTrnSupport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmTrnSupport.Entity = null;
						previousValue.CrmTrnActivities.Remove(this);
					}
					this._CrmTrnSupport.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities.Add(this);
						this._SPId = value.Id;
					}
					else
					{
						this._SPId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CrmTrnSupport");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnLead_CrmTrnActivity", Storage="_CrmTrnLead", ThisKey="LDId", OtherKey="Id", IsForeignKey=true, DeleteRule="CASCADE")]
		public CrmTrnLead CrmTrnLead
		{
			get
			{
				return this._CrmTrnLead.Entity;
			}
			set
			{
				CrmTrnLead previousValue = this._CrmTrnLead.Entity;
				if (((previousValue != value) 
							|| (this._CrmTrnLead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmTrnLead.Entity = null;
						previousValue.CrmTrnActivities.Remove(this);
					}
					this._CrmTrnLead.Entity = value;
					if ((value != null))
					{
						value.CrmTrnActivities.Add(this);
						this._LDId = value.Id;
					}
					else
					{
						this._LDId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CrmTrnLead");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmTrnSalesDelivery")]
	public partial class CrmTrnSalesDelivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SDNumber;
		
		private System.DateTime _SDDate;
		
		private System.DateTime _RenewalDate;
		
		private int _CustomerId;
		
		private System.Nullable<int> _SIId;
		
		private int _ProductId;
		
		private System.Nullable<int> _LDId;
		
		private string _ContactPerson;
		
		private string _ContactPosition;
		
		private string _ContactEmail;
		
		private string _ContactPhoneNumber;
		
		private string _Particulars;
		
		private int _AssignedToUserId;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities;
		
		private EntitySet<CrmTrnSupport> _CrmTrnSupports;
		
		private EntityRef<CrmMstProduct> _CrmMstProduct;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<TrnSalesInvoice> _TrnSalesInvoice;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<CrmTrnLead> _CrmTrnLead;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSDNumberChanging(string value);
    partial void OnSDNumberChanged();
    partial void OnSDDateChanging(System.DateTime value);
    partial void OnSDDateChanged();
    partial void OnRenewalDateChanging(System.DateTime value);
    partial void OnRenewalDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnSIIdChanging(System.Nullable<int> value);
    partial void OnSIIdChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnLDIdChanging(System.Nullable<int> value);
    partial void OnLDIdChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPositionChanging(string value);
    partial void OnContactPositionChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnContactPhoneNumberChanging(string value);
    partial void OnContactPhoneNumberChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAssignedToUserIdChanging(int value);
    partial void OnAssignedToUserIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public CrmTrnSalesDelivery()
		{
			this._CrmTrnActivities = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities));
			this._CrmTrnSupports = new EntitySet<CrmTrnSupport>(new Action<CrmTrnSupport>(this.attach_CrmTrnSupports), new Action<CrmTrnSupport>(this.detach_CrmTrnSupports));
			this._CrmMstProduct = default(EntityRef<CrmMstProduct>);
			this._MstArticle = default(EntityRef<MstArticle>);
			this._TrnSalesInvoice = default(EntityRef<TrnSalesInvoice>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._CrmTrnLead = default(EntityRef<CrmTrnLead>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SDNumber
		{
			get
			{
				return this._SDNumber;
			}
			set
			{
				if ((this._SDNumber != value))
				{
					this.OnSDNumberChanging(value);
					this.SendPropertyChanging();
					this._SDNumber = value;
					this.SendPropertyChanged("SDNumber");
					this.OnSDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDDate", DbType="DateTime NOT NULL")]
		public System.DateTime SDDate
		{
			get
			{
				return this._SDDate;
			}
			set
			{
				if ((this._SDDate != value))
				{
					this.OnSDDateChanging(value);
					this.SendPropertyChanging();
					this._SDDate = value;
					this.SendPropertyChanged("SDDate");
					this.OnSDDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RenewalDate", DbType="DateTime NOT NULL")]
		public System.DateTime RenewalDate
		{
			get
			{
				return this._RenewalDate;
			}
			set
			{
				if ((this._RenewalDate != value))
				{
					this.OnRenewalDateChanging(value);
					this.SendPropertyChanging();
					this._RenewalDate = value;
					this.SendPropertyChanged("RenewalDate");
					this.OnRenewalDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIId", DbType="Int")]
		public System.Nullable<int> SIId
		{
			get
			{
				return this._SIId;
			}
			set
			{
				if ((this._SIId != value))
				{
					if (this._TrnSalesInvoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIIdChanging(value);
					this.SendPropertyChanging();
					this._SIId = value;
					this.SendPropertyChanged("SIId");
					this.OnSIIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._CrmMstProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDId", DbType="Int")]
		public System.Nullable<int> LDId
		{
			get
			{
				return this._LDId;
			}
			set
			{
				if ((this._LDId != value))
				{
					if (this._CrmTrnLead.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLDIdChanging(value);
					this.SendPropertyChanging();
					this._LDId = value;
					this.SendPropertyChanged("LDId");
					this.OnLDIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPosition", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPosition
		{
			get
			{
				return this._ContactPosition;
			}
			set
			{
				if ((this._ContactPosition != value))
				{
					this.OnContactPositionChanging(value);
					this.SendPropertyChanging();
					this._ContactPosition = value;
					this.SendPropertyChanged("ContactPosition");
					this.OnContactPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhoneNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPhoneNumber
		{
			get
			{
				return this._ContactPhoneNumber;
			}
			set
			{
				if ((this._ContactPhoneNumber != value))
				{
					this.OnContactPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactPhoneNumber = value;
					this.SendPropertyChanged("ContactPhoneNumber");
					this.OnContactPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedToUserId", DbType="Int NOT NULL")]
		public int AssignedToUserId
		{
			get
			{
				return this._AssignedToUserId;
			}
			set
			{
				if ((this._AssignedToUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignedToUserIdChanging(value);
					this.SendPropertyChanging();
					this._AssignedToUserId = value;
					this.SendPropertyChanged("AssignedToUserId");
					this.OnAssignedToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSalesDelivery_CrmTrnActivity", Storage="_CrmTrnActivities", ThisKey="Id", OtherKey="SDId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities
		{
			get
			{
				return this._CrmTrnActivities;
			}
			set
			{
				this._CrmTrnActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSalesDelivery_CrmTrnSupport", Storage="_CrmTrnSupports", ThisKey="Id", OtherKey="SDId")]
		public EntitySet<CrmTrnSupport> CrmTrnSupports
		{
			get
			{
				return this._CrmTrnSupports;
			}
			set
			{
				this._CrmTrnSupports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmMstProduct_CrmTrnSalesDelivery", Storage="_CrmMstProduct", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public CrmMstProduct CrmMstProduct
		{
			get
			{
				return this._CrmMstProduct.Entity;
			}
			set
			{
				CrmMstProduct previousValue = this._CrmMstProduct.Entity;
				if (((previousValue != value) 
							|| (this._CrmMstProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmMstProduct.Entity = null;
						previousValue.CrmTrnSalesDeliveries.Remove(this);
					}
					this._CrmMstProduct.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSalesDeliveries.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("CrmMstProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_CrmTrnSalesDelivery", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.CrmTrnSalesDeliveries.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSalesDeliveries.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_CrmTrnSalesDelivery", Storage="_TrnSalesInvoice", ThisKey="SIId", OtherKey="Id", IsForeignKey=true)]
		public TrnSalesInvoice TrnSalesInvoice
		{
			get
			{
				return this._TrnSalesInvoice.Entity;
			}
			set
			{
				TrnSalesInvoice previousValue = this._TrnSalesInvoice.Entity;
				if (((previousValue != value) 
							|| (this._TrnSalesInvoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TrnSalesInvoice.Entity = null;
						previousValue.CrmTrnSalesDeliveries.Remove(this);
					}
					this._TrnSalesInvoice.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSalesDeliveries.Add(this);
						this._SIId = value.Id;
					}
					else
					{
						this._SIId = default(Nullable<int>);
					}
					this.SendPropertyChanged("TrnSalesInvoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSalesDelivery", Storage="_MstUser", ThisKey="AssignedToUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.CrmTrnSalesDeliveries.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSalesDeliveries.Add(this);
						this._AssignedToUserId = value.Id;
					}
					else
					{
						this._AssignedToUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSalesDelivery1", Storage="_MstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.CrmTrnSalesDeliveries1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSalesDeliveries1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSalesDelivery2", Storage="_MstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.CrmTrnSalesDeliveries2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSalesDeliveries2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnLead_CrmTrnSalesDelivery", Storage="_CrmTrnLead", ThisKey="LDId", OtherKey="Id", IsForeignKey=true)]
		public CrmTrnLead CrmTrnLead
		{
			get
			{
				return this._CrmTrnLead.Entity;
			}
			set
			{
				CrmTrnLead previousValue = this._CrmTrnLead.Entity;
				if (((previousValue != value) 
							|| (this._CrmTrnLead.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmTrnLead.Entity = null;
						previousValue.CrmTrnSalesDeliveries.Remove(this);
					}
					this._CrmTrnLead.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSalesDeliveries.Add(this);
						this._LDId = value.Id;
					}
					else
					{
						this._LDId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CrmTrnLead");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSalesDelivery = this;
		}
		
		private void detach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSalesDelivery = null;
		}
		
		private void attach_CrmTrnSupports(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSalesDelivery = this;
		}
		
		private void detach_CrmTrnSupports(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSalesDelivery = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstAccount")]
	public partial class MstAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _AccountCode;
		
		private string _Account;
		
		private int _AccountTypeId;
		
		private int _AccountCashFlowId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<MstArticle> _MstArticles2;
		
		private EntitySet<MstArticle> _MstArticles3;
		
		private EntitySet<MstArticle> _MstArticles4;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups1;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups2;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups3;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups4;
		
		private EntitySet<MstTaxType> _MstTaxTypes;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntitySet<MstUser> _MstUsers1;
		
		private EntitySet<MstUser> _MstUsers2;
		
		private EntitySet<MstUser> _MstUsers3;
		
		private EntitySet<MstUser> _MstUsers4;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountCodeChanging(string value);
    partial void OnAccountCodeChanged();
    partial void OnAccountChanging(string value);
    partial void OnAccountChanged();
    partial void OnAccountTypeIdChanging(int value);
    partial void OnAccountTypeIdChanged();
    partial void OnAccountCashFlowIdChanging(int value);
    partial void OnAccountCashFlowIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstAccount()
		{
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._MstArticles2 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles2), new Action<MstArticle>(this.detach_MstArticles2));
			this._MstArticles3 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles3), new Action<MstArticle>(this.detach_MstArticles3));
			this._MstArticles4 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles4), new Action<MstArticle>(this.detach_MstArticles4));
			this._MstArticleGroups = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups), new Action<MstArticleGroup>(this.detach_MstArticleGroups));
			this._MstArticleGroups1 = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups1), new Action<MstArticleGroup>(this.detach_MstArticleGroups1));
			this._MstArticleGroups2 = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups2), new Action<MstArticleGroup>(this.detach_MstArticleGroups2));
			this._MstArticleGroups3 = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups3), new Action<MstArticleGroup>(this.detach_MstArticleGroups3));
			this._MstArticleGroups4 = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups4), new Action<MstArticleGroup>(this.detach_MstArticleGroups4));
			this._MstTaxTypes = new EntitySet<MstTaxType>(new Action<MstTaxType>(this.attach_MstTaxTypes), new Action<MstTaxType>(this.detach_MstTaxTypes));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._MstUsers1 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers1), new Action<MstUser>(this.detach_MstUsers1));
			this._MstUsers2 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers2), new Action<MstUser>(this.detach_MstUsers2));
			this._MstUsers3 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers3), new Action<MstUser>(this.detach_MstUsers3));
			this._MstUsers4 = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers4), new Action<MstUser>(this.detach_MstUsers4));
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountCode
		{
			get
			{
				return this._AccountCode;
			}
			set
			{
				if ((this._AccountCode != value))
				{
					this.OnAccountCodeChanging(value);
					this.SendPropertyChanging();
					this._AccountCode = value;
					this.SendPropertyChanged("AccountCode");
					this.OnAccountCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Account
		{
			get
			{
				return this._Account;
			}
			set
			{
				if ((this._Account != value))
				{
					this.OnAccountChanging(value);
					this.SendPropertyChanging();
					this._Account = value;
					this.SendPropertyChanged("Account");
					this.OnAccountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeId", DbType="Int NOT NULL")]
		public int AccountTypeId
		{
			get
			{
				return this._AccountTypeId;
			}
			set
			{
				if ((this._AccountTypeId != value))
				{
					this.OnAccountTypeIdChanging(value);
					this.SendPropertyChanging();
					this._AccountTypeId = value;
					this.SendPropertyChanged("AccountTypeId");
					this.OnAccountTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountCashFlowId", DbType="Int NOT NULL")]
		public int AccountCashFlowId
		{
			get
			{
				return this._AccountCashFlowId;
			}
			set
			{
				if ((this._AccountCashFlowId != value))
				{
					this.OnAccountCashFlowIdChanging(value);
					this.SendPropertyChanging();
					this._AccountCashFlowId = value;
					this.SendPropertyChanged("AccountCashFlowId");
					this.OnAccountCashFlowIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccount", Storage="_MstAccount2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstAccount1 = null;
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstAccount1 = this;
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="SalesAccountId")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle2", Storage="_MstArticles2", ThisKey="Id", OtherKey="CostAccountId")]
		public EntitySet<MstArticle> MstArticles2
		{
			get
			{
				return this._MstArticles2;
			}
			set
			{
				this._MstArticles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle3", Storage="_MstArticles3", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<MstArticle> MstArticles3
		{
			get
			{
				return this._MstArticles3;
			}
			set
			{
				this._MstArticles3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle4", Storage="_MstArticles4", ThisKey="Id", OtherKey="ExpenseAccountId")]
		public EntitySet<MstArticle> MstArticles4
		{
			get
			{
				return this._MstArticles4;
			}
			set
			{
				this._MstArticles4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup", Storage="_MstArticleGroups", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this._MstArticleGroups;
			}
			set
			{
				this._MstArticleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup1", Storage="_MstArticleGroups1", ThisKey="Id", OtherKey="SalesAccountId")]
		public EntitySet<MstArticleGroup> MstArticleGroups1
		{
			get
			{
				return this._MstArticleGroups1;
			}
			set
			{
				this._MstArticleGroups1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup2", Storage="_MstArticleGroups2", ThisKey="Id", OtherKey="CostAccountId")]
		public EntitySet<MstArticleGroup> MstArticleGroups2
		{
			get
			{
				return this._MstArticleGroups2;
			}
			set
			{
				this._MstArticleGroups2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup3", Storage="_MstArticleGroups3", ThisKey="Id", OtherKey="AssetAccountId")]
		public EntitySet<MstArticleGroup> MstArticleGroups3
		{
			get
			{
				return this._MstArticleGroups3;
			}
			set
			{
				this._MstArticleGroups3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup4", Storage="_MstArticleGroups4", ThisKey="Id", OtherKey="ExpenseAccountId")]
		public EntitySet<MstArticleGroup> MstArticleGroups4
		{
			get
			{
				return this._MstArticleGroups4;
			}
			set
			{
				this._MstArticleGroups4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTaxType", Storage="_MstTaxTypes", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<MstTaxType> MstTaxTypes
		{
			get
			{
				return this._MstTaxTypes;
			}
			set
			{
				this._MstTaxTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="IncomeAccountId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser1", Storage="_MstUsers1", ThisKey="Id", OtherKey="SupplierAdvancesAccountId")]
		public EntitySet<MstUser> MstUsers1
		{
			get
			{
				return this._MstUsers1;
			}
			set
			{
				this._MstUsers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser2", Storage="_MstUsers2", ThisKey="Id", OtherKey="CustomerAdvancesAccountId")]
		public EntitySet<MstUser> MstUsers2
		{
			get
			{
				return this._MstUsers2;
			}
			set
			{
				this._MstUsers2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser3", Storage="_MstUsers3", ThisKey="Id", OtherKey="CustomerReturnAccountId")]
		public EntitySet<MstUser> MstUsers3
		{
			get
			{
				return this._MstUsers3;
			}
			set
			{
				this._MstUsers3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser4", Storage="_MstUsers4", ThisKey="Id", OtherKey="SupplierReturnAccountId")]
		public EntitySet<MstUser> MstUsers4
		{
			get
			{
				return this._MstUsers4;
			}
			set
			{
				this._MstUsers4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstAccount", Storage="_MstAccount1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstAccount2 = null;
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstAccount2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstAccounts.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstAccounts.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstAccounts1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstAccounts1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_MstArticles3(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = this;
		}
		
		private void detach_MstArticles3(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = null;
		}
		
		private void attach_MstArticles4(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = this;
		}
		
		private void detach_MstArticles4(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = null;
		}
		
		private void attach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstArticleGroups1(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_MstArticleGroups1(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_MstArticleGroups2(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_MstArticleGroups2(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_MstArticleGroups3(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = this;
		}
		
		private void detach_MstArticleGroups3(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = null;
		}
		
		private void attach_MstArticleGroups4(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = this;
		}
		
		private void detach_MstArticleGroups4(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = null;
		}
		
		private void attach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount = null;
		}
		
		private void attach_MstUsers1(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = this;
		}
		
		private void detach_MstUsers1(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount1 = null;
		}
		
		private void attach_MstUsers2(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = this;
		}
		
		private void detach_MstUsers2(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount2 = null;
		}
		
		private void attach_MstUsers3(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = this;
		}
		
		private void detach_MstUsers3(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount3 = null;
		}
		
		private void attach_MstUsers4(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = this;
		}
		
		private void detach_MstUsers4(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstAccount4 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticle")]
	public partial class MstArticle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleCode;
		
		private string _ManualArticleCode;
		
		private string _Article;
		
		private string _Category;
		
		private int _ArticleTypeId;
		
		private int _ArticleGroupId;
		
		private int _AccountId;
		
		private int _SalesAccountId;
		
		private int _CostAccountId;
		
		private int _AssetAccountId;
		
		private int _ExpenseAccountId;
		
		private int _UnitId;
		
		private int _OutputTaxId;
		
		private int _InputTaxId;
		
		private int _WTaxTypeId;
		
		private decimal _Price;
		
		private decimal _Cost;
		
		private bool _IsInventory;
		
		private bool _IsConsignment;
		
		private decimal _ConsignmentCostPercentage;
		
		private decimal _ConsignmentCostValue;
		
		private string _Particulars;
		
		private string _Address;
		
		private int _TermId;
		
		private string _ContactNumber;
		
		private string _ContactPerson;
		
		private string _EmailAddress;
		
		private string _TaxNumber;
		
		private decimal _CreditLimit;
		
		private System.DateTime _DateAcquired;
		
		private decimal _UsefulLife;
		
		private decimal _SalvageValue;
		
		private string _ManualArticleOldCode;
		
		private int _Kitting;
		
		private System.Nullable<int> _DefaultSupplierId;
		
		private decimal _StockLevelQuantity;
		
		private decimal _ReorderQuantity;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<CrmTrnSalesDelivery> _CrmTrnSalesDeliveries;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<CrmTrnSupport> _CrmTrnSupports;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstAccount> _MstAccount3;
		
		private EntityRef<MstAccount> _MstAccount4;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUnit> _MstUnit;
		
		private EntityRef<MstArticleGroup> _MstArticleGroup;
		
		private EntityRef<MstTaxType> _MstTaxType;
		
		private EntityRef<MstTaxType> _MstTaxType1;
		
		private EntityRef<MstTaxType> _MstTaxType2;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleCodeChanging(string value);
    partial void OnArticleCodeChanged();
    partial void OnManualArticleCodeChanging(string value);
    partial void OnManualArticleCodeChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    partial void OnArticleGroupIdChanging(int value);
    partial void OnArticleGroupIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnSalesAccountIdChanging(int value);
    partial void OnSalesAccountIdChanged();
    partial void OnCostAccountIdChanging(int value);
    partial void OnCostAccountIdChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    partial void OnExpenseAccountIdChanging(int value);
    partial void OnExpenseAccountIdChanged();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnOutputTaxIdChanging(int value);
    partial void OnOutputTaxIdChanged();
    partial void OnInputTaxIdChanging(int value);
    partial void OnInputTaxIdChanged();
    partial void OnWTaxTypeIdChanging(int value);
    partial void OnWTaxTypeIdChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCostChanging(decimal value);
    partial void OnCostChanged();
    partial void OnIsInventoryChanging(bool value);
    partial void OnIsInventoryChanged();
    partial void OnIsConsignmentChanging(bool value);
    partial void OnIsConsignmentChanged();
    partial void OnConsignmentCostPercentageChanging(decimal value);
    partial void OnConsignmentCostPercentageChanged();
    partial void OnConsignmentCostValueChanging(decimal value);
    partial void OnConsignmentCostValueChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnCreditLimitChanging(decimal value);
    partial void OnCreditLimitChanged();
    partial void OnDateAcquiredChanging(System.DateTime value);
    partial void OnDateAcquiredChanged();
    partial void OnUsefulLifeChanging(decimal value);
    partial void OnUsefulLifeChanged();
    partial void OnSalvageValueChanging(decimal value);
    partial void OnSalvageValueChanged();
    partial void OnManualArticleOldCodeChanging(string value);
    partial void OnManualArticleOldCodeChanged();
    partial void OnKittingChanging(int value);
    partial void OnKittingChanged();
    partial void OnDefaultSupplierIdChanging(System.Nullable<int> value);
    partial void OnDefaultSupplierIdChanged();
    partial void OnStockLevelQuantityChanging(decimal value);
    partial void OnStockLevelQuantityChanged();
    partial void OnReorderQuantityChanging(decimal value);
    partial void OnReorderQuantityChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticle()
		{
			this._CrmTrnSalesDeliveries = new EntitySet<CrmTrnSalesDelivery>(new Action<CrmTrnSalesDelivery>(this.attach_CrmTrnSalesDeliveries), new Action<CrmTrnSalesDelivery>(this.detach_CrmTrnSalesDeliveries));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._CrmTrnSupports = new EntitySet<CrmTrnSupport>(new Action<CrmTrnSupport>(this.attach_CrmTrnSupports), new Action<CrmTrnSupport>(this.detach_CrmTrnSupports));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccount3 = default(EntityRef<MstAccount>);
			this._MstAccount4 = default(EntityRef<MstAccount>);
			this._MstArticleType = default(EntityRef<MstArticleType>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUnit = default(EntityRef<MstUnit>);
			this._MstArticleGroup = default(EntityRef<MstArticleGroup>);
			this._MstTaxType = default(EntityRef<MstTaxType>);
			this._MstTaxType1 = default(EntityRef<MstTaxType>);
			this._MstTaxType2 = default(EntityRef<MstTaxType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleCode
		{
			get
			{
				return this._ArticleCode;
			}
			set
			{
				if ((this._ArticleCode != value))
				{
					this.OnArticleCodeChanging(value);
					this.SendPropertyChanging();
					this._ArticleCode = value;
					this.SendPropertyChanged("ArticleCode");
					this.OnArticleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualArticleCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualArticleCode
		{
			get
			{
				return this._ManualArticleCode;
			}
			set
			{
				if ((this._ManualArticleCode != value))
				{
					this.OnManualArticleCodeChanging(value);
					this.SendPropertyChanging();
					this._ManualArticleCode = value;
					this.SendPropertyChanged("ManualArticleCode");
					this.OnManualArticleCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Int NOT NULL")]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroupId", DbType="Int NOT NULL")]
		public int ArticleGroupId
		{
			get
			{
				return this._ArticleGroupId;
			}
			set
			{
				if ((this._ArticleGroupId != value))
				{
					if (this._MstArticleGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroupId = value;
					this.SendPropertyChanged("ArticleGroupId");
					this.OnArticleGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="Int NOT NULL")]
		public int SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountId = value;
					this.SendPropertyChanged("SalesAccountId");
					this.OnSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="Int NOT NULL")]
		public int CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CostAccountId = value;
					this.SendPropertyChanged("CostAccountId");
					this.OnCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL")]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAccountId", DbType="Int NOT NULL")]
		public int ExpenseAccountId
		{
			get
			{
				return this._ExpenseAccountId;
			}
			set
			{
				if ((this._ExpenseAccountId != value))
				{
					if (this._MstAccount4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAccountId = value;
					this.SendPropertyChanged("ExpenseAccountId");
					this.OnExpenseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", DbType="Int NOT NULL")]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					if (this._MstUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutputTaxId", DbType="Int NOT NULL")]
		public int OutputTaxId
		{
			get
			{
				return this._OutputTaxId;
			}
			set
			{
				if ((this._OutputTaxId != value))
				{
					if (this._MstTaxType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutputTaxIdChanging(value);
					this.SendPropertyChanging();
					this._OutputTaxId = value;
					this.SendPropertyChanged("OutputTaxId");
					this.OnOutputTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InputTaxId", DbType="Int NOT NULL")]
		public int InputTaxId
		{
			get
			{
				return this._InputTaxId;
			}
			set
			{
				if ((this._InputTaxId != value))
				{
					if (this._MstTaxType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInputTaxIdChanging(value);
					this.SendPropertyChanging();
					this._InputTaxId = value;
					this.SendPropertyChanged("InputTaxId");
					this.OnInputTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WTaxTypeId", DbType="Int NOT NULL")]
		public int WTaxTypeId
		{
			get
			{
				return this._WTaxTypeId;
			}
			set
			{
				if ((this._WTaxTypeId != value))
				{
					if (this._MstTaxType2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWTaxTypeIdChanging(value);
					this.SendPropertyChanging();
					this._WTaxTypeId = value;
					this.SendPropertyChanged("WTaxTypeId");
					this.OnWTaxTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,5) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,5) NOT NULL")]
		public decimal Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInventory", DbType="Bit NOT NULL")]
		public bool IsInventory
		{
			get
			{
				return this._IsInventory;
			}
			set
			{
				if ((this._IsInventory != value))
				{
					this.OnIsInventoryChanging(value);
					this.SendPropertyChanging();
					this._IsInventory = value;
					this.SendPropertyChanged("IsInventory");
					this.OnIsInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsConsignment", DbType="Bit NOT NULL")]
		public bool IsConsignment
		{
			get
			{
				return this._IsConsignment;
			}
			set
			{
				if ((this._IsConsignment != value))
				{
					this.OnIsConsignmentChanging(value);
					this.SendPropertyChanging();
					this._IsConsignment = value;
					this.SendPropertyChanged("IsConsignment");
					this.OnIsConsignmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignmentCostPercentage", DbType="Decimal(18,5) NOT NULL")]
		public decimal ConsignmentCostPercentage
		{
			get
			{
				return this._ConsignmentCostPercentage;
			}
			set
			{
				if ((this._ConsignmentCostPercentage != value))
				{
					this.OnConsignmentCostPercentageChanging(value);
					this.SendPropertyChanging();
					this._ConsignmentCostPercentage = value;
					this.SendPropertyChanged("ConsignmentCostPercentage");
					this.OnConsignmentCostPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConsignmentCostValue", DbType="Decimal(18,5) NOT NULL")]
		public decimal ConsignmentCostValue
		{
			get
			{
				return this._ConsignmentCostValue;
			}
			set
			{
				if ((this._ConsignmentCostValue != value))
				{
					this.OnConsignmentCostValueChanging(value);
					this.SendPropertyChanging();
					this._ConsignmentCostValue = value;
					this.SendPropertyChanged("ConsignmentCostValue");
					this.OnConsignmentCostValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="NVarChar(100)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditLimit", DbType="Decimal(18,5) NOT NULL")]
		public decimal CreditLimit
		{
			get
			{
				return this._CreditLimit;
			}
			set
			{
				if ((this._CreditLimit != value))
				{
					this.OnCreditLimitChanging(value);
					this.SendPropertyChanging();
					this._CreditLimit = value;
					this.SendPropertyChanged("CreditLimit");
					this.OnCreditLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAcquired", DbType="DateTime NOT NULL")]
		public System.DateTime DateAcquired
		{
			get
			{
				return this._DateAcquired;
			}
			set
			{
				if ((this._DateAcquired != value))
				{
					this.OnDateAcquiredChanging(value);
					this.SendPropertyChanging();
					this._DateAcquired = value;
					this.SendPropertyChanged("DateAcquired");
					this.OnDateAcquiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsefulLife", DbType="Decimal(18,5) NOT NULL")]
		public decimal UsefulLife
		{
			get
			{
				return this._UsefulLife;
			}
			set
			{
				if ((this._UsefulLife != value))
				{
					this.OnUsefulLifeChanging(value);
					this.SendPropertyChanging();
					this._UsefulLife = value;
					this.SendPropertyChanged("UsefulLife");
					this.OnUsefulLifeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalvageValue", DbType="Decimal(18,5) NOT NULL")]
		public decimal SalvageValue
		{
			get
			{
				return this._SalvageValue;
			}
			set
			{
				if ((this._SalvageValue != value))
				{
					this.OnSalvageValueChanging(value);
					this.SendPropertyChanging();
					this._SalvageValue = value;
					this.SendPropertyChanged("SalvageValue");
					this.OnSalvageValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualArticleOldCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualArticleOldCode
		{
			get
			{
				return this._ManualArticleOldCode;
			}
			set
			{
				if ((this._ManualArticleOldCode != value))
				{
					this.OnManualArticleOldCodeChanging(value);
					this.SendPropertyChanging();
					this._ManualArticleOldCode = value;
					this.SendPropertyChanged("ManualArticleOldCode");
					this.OnManualArticleOldCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kitting", DbType="Int NOT NULL")]
		public int Kitting
		{
			get
			{
				return this._Kitting;
			}
			set
			{
				if ((this._Kitting != value))
				{
					this.OnKittingChanging(value);
					this.SendPropertyChanging();
					this._Kitting = value;
					this.SendPropertyChanged("Kitting");
					this.OnKittingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSupplierId", DbType="Int")]
		public System.Nullable<int> DefaultSupplierId
		{
			get
			{
				return this._DefaultSupplierId;
			}
			set
			{
				if ((this._DefaultSupplierId != value))
				{
					this.OnDefaultSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultSupplierId = value;
					this.SendPropertyChanged("DefaultSupplierId");
					this.OnDefaultSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockLevelQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal StockLevelQuantity
		{
			get
			{
				return this._StockLevelQuantity;
			}
			set
			{
				if ((this._StockLevelQuantity != value))
				{
					this.OnStockLevelQuantityChanging(value);
					this.SendPropertyChanging();
					this._StockLevelQuantity = value;
					this.SendPropertyChanged("StockLevelQuantity");
					this.OnStockLevelQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderQuantity", DbType="Decimal(18,5) NOT NULL")]
		public decimal ReorderQuantity
		{
			get
			{
				return this._ReorderQuantity;
			}
			set
			{
				if ((this._ReorderQuantity != value))
				{
					this.OnReorderQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReorderQuantity = value;
					this.SendPropertyChanged("ReorderQuantity");
					this.OnReorderQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_CrmTrnSalesDelivery", Storage="_CrmTrnSalesDeliveries", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<CrmTrnSalesDelivery> CrmTrnSalesDeliveries
		{
			get
			{
				return this._CrmTrnSalesDeliveries;
			}
			set
			{
				this._CrmTrnSalesDeliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_CrmTrnSupport", Storage="_CrmTrnSupports", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<CrmTrnSupport> CrmTrnSupports
		{
			get
			{
				return this._CrmTrnSupports;
			}
			set
			{
				this._CrmTrnSupports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle1", Storage="_MstAccount1", ThisKey="SalesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._SalesAccountId = value.Id;
					}
					else
					{
						this._SalesAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle2", Storage="_MstAccount2", ThisKey="CostAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstArticles2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstArticles2.Add(this);
						this._CostAccountId = value.Id;
					}
					else
					{
						this._CostAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle3", Storage="_MstAccount3", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount3
		{
			get
			{
				return this._MstAccount3.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount3.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount3.Entity = null;
						previousValue.MstArticles3.Remove(this);
					}
					this._MstAccount3.Entity = value;
					if ((value != null))
					{
						value.MstArticles3.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticle4", Storage="_MstAccount4", ThisKey="ExpenseAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount4
		{
			get
			{
				return this._MstAccount4.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount4.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount4.Entity = null;
						previousValue.MstArticles4.Remove(this);
					}
					this._MstAccount4.Entity = value;
					if ((value != null))
					{
						value.MstArticles4.Add(this);
						this._ExpenseAccountId = value.Id;
					}
					else
					{
						this._ExpenseAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticle", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticle", Storage="_MstUnit", ThisKey="UnitId", OtherKey="Id", IsForeignKey=true)]
		public MstUnit MstUnit
		{
			get
			{
				return this._MstUnit.Entity;
			}
			set
			{
				MstUnit previousValue = this._MstUnit.Entity;
				if (((previousValue != value) 
							|| (this._MstUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUnit.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstUnit.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._UnitId = value.Id;
					}
					else
					{
						this._UnitId = default(int);
					}
					this.SendPropertyChanged("MstUnit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_MstArticle", Storage="_MstArticleGroup", ThisKey="ArticleGroupId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleGroup MstArticleGroup
		{
			get
			{
				return this._MstArticleGroup.Entity;
			}
			set
			{
				MstArticleGroup previousValue = this._MstArticleGroup.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleGroup.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstArticleGroup.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._ArticleGroupId = value.Id;
					}
					else
					{
						this._ArticleGroupId = default(int);
					}
					this.SendPropertyChanged("MstArticleGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle", Storage="_MstTaxType", ThisKey="OutputTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType
		{
			get
			{
				return this._MstTaxType.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstTaxType.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._OutputTaxId = value.Id;
					}
					else
					{
						this._OutputTaxId = default(int);
					}
					this.SendPropertyChanged("MstTaxType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle1", Storage="_MstTaxType1", ThisKey="InputTaxId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType1
		{
			get
			{
				return this._MstTaxType1.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType1.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstTaxType1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._InputTaxId = value.Id;
					}
					else
					{
						this._InputTaxId = default(int);
					}
					this.SendPropertyChanged("MstTaxType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle2", Storage="_MstTaxType2", ThisKey="WTaxTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstTaxType MstTaxType2
		{
			get
			{
				return this._MstTaxType2.Entity;
			}
			set
			{
				MstTaxType previousValue = this._MstTaxType2.Entity;
				if (((previousValue != value) 
							|| (this._MstTaxType2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTaxType2.Entity = null;
						previousValue.MstArticles2.Remove(this);
					}
					this._MstTaxType2.Entity = value;
					if ((value != null))
					{
						value.MstArticles2.Add(this);
						this._WTaxTypeId = value.Id;
					}
					else
					{
						this._WTaxTypeId = default(int);
					}
					this.SendPropertyChanged("MstTaxType2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstArticles.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstArticles.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstArticles1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstArticles1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
		
		private void attach_CrmTrnSupports(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = this;
		}
		
		private void detach_CrmTrnSupports(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstArticle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleType")]
	public partial class MstArticleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleType;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleTypeChanging(string value);
    partial void OnArticleTypeChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticleType()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticleGroups = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups), new Action<MstArticleGroup>(this.detach_MstArticleGroups));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleType
		{
			get
			{
				return this._ArticleType;
			}
			set
			{
				if ((this._ArticleType != value))
				{
					this.OnArticleTypeChanging(value);
					this.SendPropertyChanging();
					this._ArticleType = value;
					this.SendPropertyChanged("ArticleType");
					this.OnArticleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticleGroup", Storage="_MstArticleGroups", ThisKey="Id", OtherKey="ArticleTypeId")]
		public EntitySet<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this._MstArticleGroups;
			}
			set
			{
				this._MstArticleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstArticleTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstArticleTypes.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstArticleTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstArticleTypes1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
		
		private void attach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = this;
		}
		
		private void detach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstBranch")]
	public partial class MstBranch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _CompanyId;
		
		private string _BranchCode;
		
		private string _Branch;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private string _TaxNumber;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntityRef<MstCompany> _MstCompany;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBranchCodeChanging(string value);
    partial void OnBranchCodeChanged();
    partial void OnBranchChanging(string value);
    partial void OnBranchChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstBranch()
		{
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._MstCompany = default(EntityRef<MstCompany>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchCode", DbType="NVarChar(5) NOT NULL", CanBeNull=false)]
		public string BranchCode
		{
			get
			{
				return this._BranchCode;
			}
			set
			{
				if ((this._BranchCode != value))
				{
					this.OnBranchCodeChanging(value);
					this.SendPropertyChanging();
					this._BranchCode = value;
					this.SendPropertyChanged("BranchCode");
					this.OnBranchCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this.OnBranchChanging(value);
					this.SendPropertyChanging();
					this._Branch = value;
					this.SendPropertyChanged("Branch");
					this.OnBranchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(100)")]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstBranches.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstBranches.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstBranches.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstBranches.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstBranches1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstBranches1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstBranch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTerm")]
	public partial class MstTerm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Term;
		
		private decimal _NumberOfDays;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnNumberOfDaysChanging(decimal value);
    partial void OnNumberOfDaysChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTerm()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfDays", DbType="Decimal(18,5) NOT NULL")]
		public decimal NumberOfDays
		{
			get
			{
				return this._NumberOfDays;
			}
			set
			{
				if ((this._NumberOfDays != value))
				{
					this.OnNumberOfDaysChanging(value);
					this.SendPropertyChanging();
					this._NumberOfDays = value;
					this.SendPropertyChanged("NumberOfDays");
					this.OnNumberOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="TermId")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstTerms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstTerms.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstTerms1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstTerms1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstTerm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUnit")]
	public partial class MstUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Unit;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUnit()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUnit_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="UnitId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUnits.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUnits.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstUnits1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstUnits1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUnit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrnSalesInvoice")]
	public partial class TrnSalesInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BranchId;
		
		private string _SINumber;
		
		private System.DateTime _SIDate;
		
		private int _CustomerId;
		
		private int _TermId;
		
		private string _DocumentReference;
		
		private string _ManualSINumber;
		
		private string _Remarks;
		
		private decimal _Amount;
		
		private decimal _PaidAmount;
		
		private decimal _AdjustmentAmount;
		
		private decimal _BalanceAmount;
		
		private int _SoldById;
		
		private int _PreparedById;
		
		private int _CheckedById;
		
		private int _ApprovedById;
		
		private string _Status;
		
		private bool _IsCancelled;
		
		private bool _IsPrinted;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<CrmTrnSalesDelivery> _CrmTrnSalesDeliveries;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstTerm> _MstTerm;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<MstUser> _MstUser3;
		
		private EntityRef<MstUser> _MstUser4;
		
		private EntityRef<MstUser> _MstUser5;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnSINumberChanging(string value);
    partial void OnSINumberChanged();
    partial void OnSIDateChanging(System.DateTime value);
    partial void OnSIDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnTermIdChanging(int value);
    partial void OnTermIdChanged();
    partial void OnDocumentReferenceChanging(string value);
    partial void OnDocumentReferenceChanged();
    partial void OnManualSINumberChanging(string value);
    partial void OnManualSINumberChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaidAmountChanging(decimal value);
    partial void OnPaidAmountChanged();
    partial void OnAdjustmentAmountChanging(decimal value);
    partial void OnAdjustmentAmountChanged();
    partial void OnBalanceAmountChanging(decimal value);
    partial void OnBalanceAmountChanged();
    partial void OnSoldByIdChanging(int value);
    partial void OnSoldByIdChanged();
    partial void OnPreparedByIdChanging(int value);
    partial void OnPreparedByIdChanged();
    partial void OnCheckedByIdChanging(int value);
    partial void OnCheckedByIdChanged();
    partial void OnApprovedByIdChanging(int value);
    partial void OnApprovedByIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsCancelledChanging(bool value);
    partial void OnIsCancelledChanged();
    partial void OnIsPrintedChanging(bool value);
    partial void OnIsPrintedChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public TrnSalesInvoice()
		{
			this._CrmTrnSalesDeliveries = new EntitySet<CrmTrnSalesDelivery>(new Action<CrmTrnSalesDelivery>(this.attach_CrmTrnSalesDeliveries), new Action<CrmTrnSalesDelivery>(this.detach_CrmTrnSalesDeliveries));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstTerm = default(EntityRef<MstTerm>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._MstUser3 = default(EntityRef<MstUser>);
			this._MstUser4 = default(EntityRef<MstUser>);
			this._MstUser5 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SINumber
		{
			get
			{
				return this._SINumber;
			}
			set
			{
				if ((this._SINumber != value))
				{
					this.OnSINumberChanging(value);
					this.SendPropertyChanging();
					this._SINumber = value;
					this.SendPropertyChanged("SINumber");
					this.OnSINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIDate", DbType="DateTime NOT NULL")]
		public System.DateTime SIDate
		{
			get
			{
				return this._SIDate;
			}
			set
			{
				if ((this._SIDate != value))
				{
					this.OnSIDateChanging(value);
					this.SendPropertyChanging();
					this._SIDate = value;
					this.SendPropertyChanged("SIDate");
					this.OnSIDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TermId", DbType="Int NOT NULL")]
		public int TermId
		{
			get
			{
				return this._TermId;
			}
			set
			{
				if ((this._TermId != value))
				{
					if (this._MstTerm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTermIdChanging(value);
					this.SendPropertyChanging();
					this._TermId = value;
					this.SendPropertyChanged("TermId");
					this.OnTermIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentReference", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentReference
		{
			get
			{
				return this._DocumentReference;
			}
			set
			{
				if ((this._DocumentReference != value))
				{
					this.OnDocumentReferenceChanging(value);
					this.SendPropertyChanging();
					this._DocumentReference = value;
					this.SendPropertyChanged("DocumentReference");
					this.OnDocumentReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManualSINumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ManualSINumber
		{
			get
			{
				return this._ManualSINumber;
			}
			set
			{
				if ((this._ManualSINumber != value))
				{
					this.OnManualSINumberChanging(value);
					this.SendPropertyChanging();
					this._ManualSINumber = value;
					this.SendPropertyChanged("ManualSINumber");
					this.OnManualSINumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,5) NOT NULL")]
		public decimal Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal PaidAmount
		{
			get
			{
				return this._PaidAmount;
			}
			set
			{
				if ((this._PaidAmount != value))
				{
					this.OnPaidAmountChanging(value);
					this.SendPropertyChanging();
					this._PaidAmount = value;
					this.SendPropertyChanged("PaidAmount");
					this.OnPaidAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal AdjustmentAmount
		{
			get
			{
				return this._AdjustmentAmount;
			}
			set
			{
				if ((this._AdjustmentAmount != value))
				{
					this.OnAdjustmentAmountChanging(value);
					this.SendPropertyChanging();
					this._AdjustmentAmount = value;
					this.SendPropertyChanged("AdjustmentAmount");
					this.OnAdjustmentAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceAmount", DbType="Decimal(18,5) NOT NULL")]
		public decimal BalanceAmount
		{
			get
			{
				return this._BalanceAmount;
			}
			set
			{
				if ((this._BalanceAmount != value))
				{
					this.OnBalanceAmountChanging(value);
					this.SendPropertyChanging();
					this._BalanceAmount = value;
					this.SendPropertyChanged("BalanceAmount");
					this.OnBalanceAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoldById", DbType="Int NOT NULL")]
		public int SoldById
		{
			get
			{
				return this._SoldById;
			}
			set
			{
				if ((this._SoldById != value))
				{
					if (this._MstUser4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoldByIdChanging(value);
					this.SendPropertyChanging();
					this._SoldById = value;
					this.SendPropertyChanged("SoldById");
					this.OnSoldByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparedById", DbType="Int NOT NULL")]
		public int PreparedById
		{
			get
			{
				return this._PreparedById;
			}
			set
			{
				if ((this._PreparedById != value))
				{
					if (this._MstUser3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparedByIdChanging(value);
					this.SendPropertyChanging();
					this._PreparedById = value;
					this.SendPropertyChanged("PreparedById");
					this.OnPreparedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedById", DbType="Int NOT NULL")]
		public int CheckedById
		{
			get
			{
				return this._CheckedById;
			}
			set
			{
				if ((this._CheckedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._CheckedById = value;
					this.SendPropertyChanged("CheckedById");
					this.OnCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovedById", DbType="Int NOT NULL")]
		public int ApprovedById
		{
			get
			{
				return this._ApprovedById;
			}
			set
			{
				if ((this._ApprovedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._ApprovedById = value;
					this.SendPropertyChanged("ApprovedById");
					this.OnApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCancelled", DbType="Bit NOT NULL")]
		public bool IsCancelled
		{
			get
			{
				return this._IsCancelled;
			}
			set
			{
				if ((this._IsCancelled != value))
				{
					this.OnIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._IsCancelled = value;
					this.SendPropertyChanged("IsCancelled");
					this.OnIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrinted", DbType="Bit NOT NULL")]
		public bool IsPrinted
		{
			get
			{
				return this._IsPrinted;
			}
			set
			{
				if ((this._IsPrinted != value))
				{
					this.OnIsPrintedChanging(value);
					this.SendPropertyChanging();
					this._IsPrinted = value;
					this.SendPropertyChanged("IsPrinted");
					this.OnIsPrintedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser5.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TrnSalesInvoice_CrmTrnSalesDelivery", Storage="_CrmTrnSalesDeliveries", ThisKey="Id", OtherKey="SIId")]
		public EntitySet<CrmTrnSalesDelivery> CrmTrnSalesDeliveries
		{
			get
			{
				return this._CrmTrnSalesDeliveries;
			}
			set
			{
				this._CrmTrnSalesDeliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_TrnSalesInvoice", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_TrnSalesInvoice", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTerm_TrnSalesInvoice", Storage="_MstTerm", ThisKey="TermId", OtherKey="Id", IsForeignKey=true)]
		public MstTerm MstTerm
		{
			get
			{
				return this._MstTerm.Entity;
			}
			set
			{
				MstTerm previousValue = this._MstTerm.Entity;
				if (((previousValue != value) 
							|| (this._MstTerm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstTerm.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstTerm.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._TermId = value.Id;
					}
					else
					{
						this._TermId = default(int);
					}
					this.SendPropertyChanged("MstTerm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice", Storage="_MstUser", ThisKey="ApprovedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.TrnSalesInvoices.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices.Add(this);
						this._ApprovedById = value.Id;
					}
					else
					{
						this._ApprovedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice1", Storage="_MstUser1", ThisKey="CheckedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.TrnSalesInvoices1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices1.Add(this);
						this._CheckedById = value.Id;
					}
					else
					{
						this._CheckedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice2", Storage="_MstUser2", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.TrnSalesInvoices2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices2.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice3", Storage="_MstUser3", ThisKey="PreparedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser3
		{
			get
			{
				return this._MstUser3.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser3.Entity;
				if (((previousValue != value) 
							|| (this._MstUser3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser3.Entity = null;
						previousValue.TrnSalesInvoices3.Remove(this);
					}
					this._MstUser3.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices3.Add(this);
						this._PreparedById = value.Id;
					}
					else
					{
						this._PreparedById = default(int);
					}
					this.SendPropertyChanged("MstUser3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice4", Storage="_MstUser4", ThisKey="SoldById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser4
		{
			get
			{
				return this._MstUser4.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser4.Entity;
				if (((previousValue != value) 
							|| (this._MstUser4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser4.Entity = null;
						previousValue.TrnSalesInvoices4.Remove(this);
					}
					this._MstUser4.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices4.Add(this);
						this._SoldById = value.Id;
					}
					else
					{
						this._SoldById = default(int);
					}
					this.SendPropertyChanged("MstUser4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice5", Storage="_MstUser5", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser5
		{
			get
			{
				return this._MstUser5.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser5.Entity;
				if (((previousValue != value) 
							|| (this._MstUser5.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser5.Entity = null;
						previousValue.TrnSalesInvoices5.Remove(this);
					}
					this._MstUser5.Entity = value;
					if ((value != null))
					{
						value.TrnSalesInvoices5.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser5");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = this;
		}
		
		private void detach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.TrnSalesInvoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstArticleGroup")]
	public partial class MstArticleGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ArticleGroup;
		
		private int _ArticleTypeId;
		
		private int _AccountId;
		
		private int _SalesAccountId;
		
		private int _CostAccountId;
		
		private int _AssetAccountId;
		
		private int _ExpenseAccountId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstAccount> _MstAccount3;
		
		private EntityRef<MstAccount> _MstAccount4;
		
		private EntityRef<MstArticleType> _MstArticleType;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnArticleGroupChanging(string value);
    partial void OnArticleGroupChanged();
    partial void OnArticleTypeIdChanging(int value);
    partial void OnArticleTypeIdChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnSalesAccountIdChanging(int value);
    partial void OnSalesAccountIdChanged();
    partial void OnCostAccountIdChanging(int value);
    partial void OnCostAccountIdChanged();
    partial void OnAssetAccountIdChanging(int value);
    partial void OnAssetAccountIdChanged();
    partial void OnExpenseAccountIdChanging(int value);
    partial void OnExpenseAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstArticleGroup()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccount3 = default(EntityRef<MstAccount>);
			this._MstAccount4 = default(EntityRef<MstAccount>);
			this._MstArticleType = default(EntityRef<MstArticleType>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleGroup
		{
			get
			{
				return this._ArticleGroup;
			}
			set
			{
				if ((this._ArticleGroup != value))
				{
					this.OnArticleGroupChanging(value);
					this.SendPropertyChanging();
					this._ArticleGroup = value;
					this.SendPropertyChanged("ArticleGroup");
					this.OnArticleGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleTypeId", DbType="Int NOT NULL")]
		public int ArticleTypeId
		{
			get
			{
				return this._ArticleTypeId;
			}
			set
			{
				if ((this._ArticleTypeId != value))
				{
					if (this._MstArticleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnArticleTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleTypeId = value;
					this.SendPropertyChanged("ArticleTypeId");
					this.OnArticleTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesAccountId", DbType="Int NOT NULL")]
		public int SalesAccountId
		{
			get
			{
				return this._SalesAccountId;
			}
			set
			{
				if ((this._SalesAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSalesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SalesAccountId = value;
					this.SendPropertyChanged("SalesAccountId");
					this.OnSalesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostAccountId", DbType="Int NOT NULL")]
		public int CostAccountId
		{
			get
			{
				return this._CostAccountId;
			}
			set
			{
				if ((this._CostAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CostAccountId = value;
					this.SendPropertyChanged("CostAccountId");
					this.OnCostAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetAccountId", DbType="Int NOT NULL")]
		public int AssetAccountId
		{
			get
			{
				return this._AssetAccountId;
			}
			set
			{
				if ((this._AssetAccountId != value))
				{
					if (this._MstAccount3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssetAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AssetAccountId = value;
					this.SendPropertyChanged("AssetAccountId");
					this.OnAssetAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpenseAccountId", DbType="Int NOT NULL")]
		public int ExpenseAccountId
		{
			get
			{
				return this._ExpenseAccountId;
			}
			set
			{
				if ((this._ExpenseAccountId != value))
				{
					if (this._MstAccount4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpenseAccountIdChanging(value);
					this.SendPropertyChanging();
					this._ExpenseAccountId = value;
					this.SendPropertyChanged("ExpenseAccountId");
					this.OnExpenseAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleGroup_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="ArticleGroupId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstArticleGroups.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup1", Storage="_MstAccount1", ThisKey="SalesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstArticleGroups1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups1.Add(this);
						this._SalesAccountId = value.Id;
					}
					else
					{
						this._SalesAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup2", Storage="_MstAccount2", ThisKey="CostAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstArticleGroups2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups2.Add(this);
						this._CostAccountId = value.Id;
					}
					else
					{
						this._CostAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup3", Storage="_MstAccount3", ThisKey="AssetAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount3
		{
			get
			{
				return this._MstAccount3.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount3.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount3.Entity = null;
						previousValue.MstArticleGroups3.Remove(this);
					}
					this._MstAccount3.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups3.Add(this);
						this._AssetAccountId = value.Id;
					}
					else
					{
						this._AssetAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstArticleGroup4", Storage="_MstAccount4", ThisKey="ExpenseAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount4
		{
			get
			{
				return this._MstAccount4.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount4.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount4.Entity = null;
						previousValue.MstArticleGroups4.Remove(this);
					}
					this._MstAccount4.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups4.Add(this);
						this._ExpenseAccountId = value.Id;
					}
					else
					{
						this._ExpenseAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticleType_MstArticleGroup", Storage="_MstArticleType", ThisKey="ArticleTypeId", OtherKey="Id", IsForeignKey=true)]
		public MstArticleType MstArticleType
		{
			get
			{
				return this._MstArticleType.Entity;
			}
			set
			{
				MstArticleType previousValue = this._MstArticleType.Entity;
				if (((previousValue != value) 
							|| (this._MstArticleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticleType.Entity = null;
						previousValue.MstArticleGroups.Remove(this);
					}
					this._MstArticleType.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups.Add(this);
						this._ArticleTypeId = value.Id;
					}
					else
					{
						this._ArticleTypeId = default(int);
					}
					this.SendPropertyChanged("MstArticleType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleGroup", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstArticleGroups.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleGroup1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstArticleGroups1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstArticleGroups1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstArticleGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstStatus")]
	public partial class MstStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Status;
		
		private string _Category;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstStatus()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstStatus", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstStatus.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstStatus.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstStatus1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstStatus1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstStatus1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstTaxType")]
	public partial class MstTaxType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TaxType;
		
		private decimal _TaxRate;
		
		private bool _IsInclusive;
		
		private int _AccountId;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<MstArticle> _MstArticles2;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTaxTypeChanging(string value);
    partial void OnTaxTypeChanged();
    partial void OnTaxRateChanging(decimal value);
    partial void OnTaxRateChanged();
    partial void OnIsInclusiveChanging(bool value);
    partial void OnIsInclusiveChanged();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstTaxType()
		{
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._MstArticles2 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles2), new Action<MstArticle>(this.detach_MstArticles2));
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxType
		{
			get
			{
				return this._TaxType;
			}
			set
			{
				if ((this._TaxType != value))
				{
					this.OnTaxTypeChanging(value);
					this.SendPropertyChanging();
					this._TaxType = value;
					this.SendPropertyChanged("TaxType");
					this.OnTaxTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxRate", DbType="Decimal(18,5) NOT NULL")]
		public decimal TaxRate
		{
			get
			{
				return this._TaxRate;
			}
			set
			{
				if ((this._TaxRate != value))
				{
					this.OnTaxRateChanging(value);
					this.SendPropertyChanging();
					this._TaxRate = value;
					this.SendPropertyChanged("TaxRate");
					this.OnTaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsInclusive", DbType="Bit NOT NULL")]
		public bool IsInclusive
		{
			get
			{
				return this._IsInclusive;
			}
			set
			{
				if ((this._IsInclusive != value))
				{
					this.OnIsInclusiveChanging(value);
					this.SendPropertyChanging();
					this._IsInclusive = value;
					this.SendPropertyChanged("IsInclusive");
					this.OnIsInclusiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="Int NOT NULL")]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="OutputTaxId")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="InputTaxId")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstTaxType_MstArticle2", Storage="_MstArticles2", ThisKey="Id", OtherKey="WTaxTypeId")]
		public EntitySet<MstArticle> MstArticles2
		{
			get
			{
				return this._MstArticles2;
			}
			set
			{
				this._MstArticles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstTaxType", Storage="_MstAccount", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstTaxTypes.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstTaxTypes.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstTaxTypes.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstTaxTypes.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstTaxTypes1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstTaxTypes1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType1 = null;
		}
		
		private void attach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType2 = this;
		}
		
		private void detach_MstArticles2(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstTaxType2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstCompany")]
	public partial class MstCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Company;
		
		private string _Address;
		
		private string _ContactNumber;
		
		private string _TaxNumber;
		
		private System.Nullable<System.DateTime> _ClosingDate;
		
		private bool _IsLocked;
		
		private int _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<MstBranch> _MstBranches;
		
		private EntitySet<MstUser> _MstUsers;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactNumberChanging(string value);
    partial void OnContactNumberChanged();
    partial void OnTaxNumberChanging(string value);
    partial void OnTaxNumberChanged();
    partial void OnClosingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnClosingDateChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByIdChanging(int value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(int value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstCompany()
		{
			this._MstBranches = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches), new Action<MstBranch>(this.detach_MstBranches));
			this._MstUsers = new EntitySet<MstUser>(new Action<MstUser>(this.attach_MstUsers), new Action<MstUser>(this.detach_MstUsers));
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TaxNumber
		{
			get
			{
				return this._TaxNumber;
			}
			set
			{
				if ((this._TaxNumber != value))
				{
					this.OnTaxNumberChanging(value);
					this.SendPropertyChanging();
					this._TaxNumber = value;
					this.SendPropertyChanged("TaxNumber");
					this.OnTaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ClosingDate
		{
			get
			{
				return this._ClosingDate;
			}
			set
			{
				if ((this._ClosingDate != value))
				{
					this.OnClosingDateChanging(value);
					this.SendPropertyChanging();
					this._ClosingDate = value;
					this.SendPropertyChanged("ClosingDate");
					this.OnClosingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int NOT NULL")]
		public int CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int NOT NULL")]
		public int UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstBranch", Storage="_MstBranches", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstBranch> MstBranches
		{
			get
			{
				return this._MstBranches;
			}
			set
			{
				this._MstBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstUser", Storage="_MstUsers", ThisKey="Id", OtherKey="CompanyId")]
		public EntitySet<MstUser> MstUsers
		{
			get
			{
				return this._MstUsers;
			}
			set
			{
				this._MstUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany", Storage="_MstUser", ThisKey="CreatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstCompanies.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstCompanies.Add(this);
						this._CreatedById = value.Id;
					}
					else
					{
						this._CreatedById = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany1", Storage="_MstUser1", ThisKey="UpdatedById", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.MstCompanies1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.MstCompanies1.Add(this);
						this._UpdatedById = value.Id;
					}
					else
					{
						this._UpdatedById = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
		
		private void attach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = this;
		}
		
		private void detach_MstUsers(MstUser entity)
		{
			this.SendPropertyChanging();
			entity.MstCompany = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysForm")]
	public partial class SysForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _FormName;
		
		private string _Particulars;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    #endregion
		
		public SysForm()
		{
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="FormId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.SysForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUserForm")]
	public partial class MstUserForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserId;
		
		private int _FormId;
		
		private bool _CanAdd;
		
		private bool _CanEdit;
		
		private bool _CanDelete;
		
		private bool _CanLock;
		
		private bool _CanUnlock;
		
		private bool _CanCancel;
		
		private bool _CanPrint;
		
		private EntityRef<SysForm> _SysForm;
		
		private EntityRef<MstUser> _MstUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnFormIdChanging(int value);
    partial void OnFormIdChanged();
    partial void OnCanAddChanging(bool value);
    partial void OnCanAddChanged();
    partial void OnCanEditChanging(bool value);
    partial void OnCanEditChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCanLockChanging(bool value);
    partial void OnCanLockChanged();
    partial void OnCanUnlockChanging(bool value);
    partial void OnCanUnlockChanged();
    partial void OnCanCancelChanging(bool value);
    partial void OnCanCancelChanged();
    partial void OnCanPrintChanging(bool value);
    partial void OnCanPrintChanged();
    #endregion
		
		public MstUserForm()
		{
			this._SysForm = default(EntityRef<SysForm>);
			this._MstUser = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="Int NOT NULL")]
		public int FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					if (this._SysForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanAdd", DbType="Bit NOT NULL")]
		public bool CanAdd
		{
			get
			{
				return this._CanAdd;
			}
			set
			{
				if ((this._CanAdd != value))
				{
					this.OnCanAddChanging(value);
					this.SendPropertyChanging();
					this._CanAdd = value;
					this.SendPropertyChanged("CanAdd");
					this.OnCanAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanEdit", DbType="Bit NOT NULL")]
		public bool CanEdit
		{
			get
			{
				return this._CanEdit;
			}
			set
			{
				if ((this._CanEdit != value))
				{
					this.OnCanEditChanging(value);
					this.SendPropertyChanging();
					this._CanEdit = value;
					this.SendPropertyChanged("CanEdit");
					this.OnCanEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLock", DbType="Bit NOT NULL")]
		public bool CanLock
		{
			get
			{
				return this._CanLock;
			}
			set
			{
				if ((this._CanLock != value))
				{
					this.OnCanLockChanging(value);
					this.SendPropertyChanging();
					this._CanLock = value;
					this.SendPropertyChanged("CanLock");
					this.OnCanLockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUnlock", DbType="Bit NOT NULL")]
		public bool CanUnlock
		{
			get
			{
				return this._CanUnlock;
			}
			set
			{
				if ((this._CanUnlock != value))
				{
					this.OnCanUnlockChanging(value);
					this.SendPropertyChanging();
					this._CanUnlock = value;
					this.SendPropertyChanged("CanUnlock");
					this.OnCanUnlockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCancel", DbType="Bit NOT NULL")]
		public bool CanCancel
		{
			get
			{
				return this._CanCancel;
			}
			set
			{
				if ((this._CanCancel != value))
				{
					this.OnCanCancelChanging(value);
					this.SendPropertyChanging();
					this._CanCancel = value;
					this.SendPropertyChanged("CanCancel");
					this.OnCanCancelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPrint", DbType="Bit NOT NULL")]
		public bool CanPrint
		{
			get
			{
				return this._CanPrint;
			}
			set
			{
				if ((this._CanPrint != value))
				{
					this.OnCanPrintChanging(value);
					this.SendPropertyChanging();
					this._CanPrint = value;
					this.SendPropertyChanged("CanPrint");
					this.OnCanPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SysForm_MstUserForm", Storage="_SysForm", ThisKey="FormId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SysForm SysForm
		{
			get
			{
				return this._SysForm.Entity;
			}
			set
			{
				SysForm previousValue = this._SysForm.Entity;
				if (((previousValue != value) 
							|| (this._SysForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SysForm.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._SysForm.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._FormId = value.Id;
					}
					else
					{
						this._FormId = default(int);
					}
					this.SendPropertyChanged("SysForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.MstUserForms.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.MstUserForms.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MstUser")]
	public partial class MstUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _UserName;
		
		private string _Password;
		
		private string _FullName;
		
		private int _CompanyId;
		
		private int _BranchId;
		
		private int _IncomeAccountId;
		
		private int _SupplierAdvancesAccountId;
		
		private int _CustomerAdvancesAccountId;
		
		private string _InventoryType;
		
		private int _DefaultSalesInvoiceDiscountId;
		
		private string _SalesInvoiceName;
		
		private int _SalesInvoiceCheckedById;
		
		private int _SalesInvoiceApprovedById;
		
		private string _OfficialReceiptName;
		
		private bool _IsIncludeCostStockReports;
		
		private bool _ActivateAuditTrail;
		
		private bool _IsSIVATAnalysisIncluded;
		
		private bool _IsSIDuplicateDocumentReferenceAllowed;
		
		private int _CustomerReturnAccountId;
		
		private int _SupplierReturnAccountId;
		
		private bool _IsLocked;
		
		private string _CRMUserGroup;
		
		private System.Nullable<int> _CreatedById;
		
		private System.DateTime _CreatedDateTime;
		
		private System.Nullable<int> _UpdatedById;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<CrmMstProduct> _CrmMstProducts;
		
		private EntitySet<CrmMstProduct> _CrmMstProducts1;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities1;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities2;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities3;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities4;
		
		private EntitySet<CrmTrnSalesDelivery> _CrmTrnSalesDeliveries;
		
		private EntitySet<CrmTrnSalesDelivery> _CrmTrnSalesDeliveries1;
		
		private EntitySet<CrmTrnSalesDelivery> _CrmTrnSalesDeliveries2;
		
		private EntitySet<MstAccount> _MstAccounts;
		
		private EntitySet<MstAccount> _MstAccounts1;
		
		private EntitySet<MstArticle> _MstArticles;
		
		private EntitySet<MstArticle> _MstArticles1;
		
		private EntitySet<MstArticleType> _MstArticleTypes;
		
		private EntitySet<MstArticleType> _MstArticleTypes1;
		
		private EntitySet<MstBranch> _MstBranches;
		
		private EntitySet<MstBranch> _MstBranches1;
		
		private EntitySet<MstTerm> _MstTerms;
		
		private EntitySet<MstTerm> _MstTerms1;
		
		private EntitySet<MstUnit> _MstUnits;
		
		private EntitySet<MstUnit> _MstUnits1;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices1;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices2;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices3;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices4;
		
		private EntitySet<TrnSalesInvoice> _TrnSalesInvoices5;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups;
		
		private EntitySet<MstArticleGroup> _MstArticleGroups1;
		
		private EntitySet<MstStatus> _MstStatus;
		
		private EntitySet<MstStatus> _MstStatus1;
		
		private EntitySet<MstTaxType> _MstTaxTypes;
		
		private EntitySet<MstTaxType> _MstTaxTypes1;
		
		private EntitySet<MstCompany> _MstCompanies;
		
		private EntitySet<MstCompany> _MstCompanies1;
		
		private EntitySet<MstUserForm> _MstUserForms;
		
		private EntitySet<CrmMstDocument> _CrmMstDocuments;
		
		private EntitySet<CrmMstDocument> _CrmMstDocuments1;
		
		private EntitySet<CrmTrnSupport> _CrmTrnSupports;
		
		private EntitySet<CrmTrnSupport> _CrmTrnSupports1;
		
		private EntitySet<CrmTrnSupport> _CrmTrnSupports2;
		
		private EntitySet<CrmTrnLead> _CrmTrnLeads;
		
		private EntitySet<CrmTrnLead> _CrmTrnLeads1;
		
		private EntitySet<CrmTrnLead> _CrmTrnLeads2;
		
		private EntitySet<CrmTrnSoftwareDevelopment> _CrmTrnSoftwareDevelopments;
		
		private EntitySet<CrmTrnSoftwareDevelopment> _CrmTrnSoftwareDevelopments1;
		
		private EntitySet<CrmTrnSoftwareDevelopment> _CrmTrnSoftwareDevelopments2;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
		private EntityRef<MstAccount> _MstAccount;
		
		private EntityRef<MstAccount> _MstAccount1;
		
		private EntityRef<MstAccount> _MstAccount2;
		
		private EntityRef<MstAccount> _MstAccount3;
		
		private EntityRef<MstAccount> _MstAccount4;
		
		private EntityRef<MstBranch> _MstBranch;
		
		private EntityRef<MstCompany> _MstCompany;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnCompanyIdChanging(int value);
    partial void OnCompanyIdChanged();
    partial void OnBranchIdChanging(int value);
    partial void OnBranchIdChanged();
    partial void OnIncomeAccountIdChanging(int value);
    partial void OnIncomeAccountIdChanged();
    partial void OnSupplierAdvancesAccountIdChanging(int value);
    partial void OnSupplierAdvancesAccountIdChanged();
    partial void OnCustomerAdvancesAccountIdChanging(int value);
    partial void OnCustomerAdvancesAccountIdChanged();
    partial void OnInventoryTypeChanging(string value);
    partial void OnInventoryTypeChanged();
    partial void OnDefaultSalesInvoiceDiscountIdChanging(int value);
    partial void OnDefaultSalesInvoiceDiscountIdChanged();
    partial void OnSalesInvoiceNameChanging(string value);
    partial void OnSalesInvoiceNameChanged();
    partial void OnSalesInvoiceCheckedByIdChanging(int value);
    partial void OnSalesInvoiceCheckedByIdChanged();
    partial void OnSalesInvoiceApprovedByIdChanging(int value);
    partial void OnSalesInvoiceApprovedByIdChanged();
    partial void OnOfficialReceiptNameChanging(string value);
    partial void OnOfficialReceiptNameChanged();
    partial void OnIsIncludeCostStockReportsChanging(bool value);
    partial void OnIsIncludeCostStockReportsChanged();
    partial void OnActivateAuditTrailChanging(bool value);
    partial void OnActivateAuditTrailChanged();
    partial void OnIsSIVATAnalysisIncludedChanging(bool value);
    partial void OnIsSIVATAnalysisIncludedChanged();
    partial void OnIsSIDuplicateDocumentReferenceAllowedChanging(bool value);
    partial void OnIsSIDuplicateDocumentReferenceAllowedChanged();
    partial void OnCustomerReturnAccountIdChanging(int value);
    partial void OnCustomerReturnAccountIdChanged();
    partial void OnSupplierReturnAccountIdChanging(int value);
    partial void OnSupplierReturnAccountIdChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCRMUserGroupChanging(string value);
    partial void OnCRMUserGroupChanged();
    partial void OnCreatedByIdChanging(System.Nullable<int> value);
    partial void OnCreatedByIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByIdChanging(System.Nullable<int> value);
    partial void OnUpdatedByIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public MstUser()
		{
			this._CrmMstProducts = new EntitySet<CrmMstProduct>(new Action<CrmMstProduct>(this.attach_CrmMstProducts), new Action<CrmMstProduct>(this.detach_CrmMstProducts));
			this._CrmMstProducts1 = new EntitySet<CrmMstProduct>(new Action<CrmMstProduct>(this.attach_CrmMstProducts1), new Action<CrmMstProduct>(this.detach_CrmMstProducts1));
			this._CrmTrnActivities = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities));
			this._CrmTrnActivities1 = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities1), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities1));
			this._CrmTrnActivities2 = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities2), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities2));
			this._CrmTrnActivities3 = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities3), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities3));
			this._CrmTrnActivities4 = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities4), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities4));
			this._CrmTrnSalesDeliveries = new EntitySet<CrmTrnSalesDelivery>(new Action<CrmTrnSalesDelivery>(this.attach_CrmTrnSalesDeliveries), new Action<CrmTrnSalesDelivery>(this.detach_CrmTrnSalesDeliveries));
			this._CrmTrnSalesDeliveries1 = new EntitySet<CrmTrnSalesDelivery>(new Action<CrmTrnSalesDelivery>(this.attach_CrmTrnSalesDeliveries1), new Action<CrmTrnSalesDelivery>(this.detach_CrmTrnSalesDeliveries1));
			this._CrmTrnSalesDeliveries2 = new EntitySet<CrmTrnSalesDelivery>(new Action<CrmTrnSalesDelivery>(this.attach_CrmTrnSalesDeliveries2), new Action<CrmTrnSalesDelivery>(this.detach_CrmTrnSalesDeliveries2));
			this._MstAccounts = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts), new Action<MstAccount>(this.detach_MstAccounts));
			this._MstAccounts1 = new EntitySet<MstAccount>(new Action<MstAccount>(this.attach_MstAccounts1), new Action<MstAccount>(this.detach_MstAccounts1));
			this._MstArticles = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles), new Action<MstArticle>(this.detach_MstArticles));
			this._MstArticles1 = new EntitySet<MstArticle>(new Action<MstArticle>(this.attach_MstArticles1), new Action<MstArticle>(this.detach_MstArticles1));
			this._MstArticleTypes = new EntitySet<MstArticleType>(new Action<MstArticleType>(this.attach_MstArticleTypes), new Action<MstArticleType>(this.detach_MstArticleTypes));
			this._MstArticleTypes1 = new EntitySet<MstArticleType>(new Action<MstArticleType>(this.attach_MstArticleTypes1), new Action<MstArticleType>(this.detach_MstArticleTypes1));
			this._MstBranches = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches), new Action<MstBranch>(this.detach_MstBranches));
			this._MstBranches1 = new EntitySet<MstBranch>(new Action<MstBranch>(this.attach_MstBranches1), new Action<MstBranch>(this.detach_MstBranches1));
			this._MstTerms = new EntitySet<MstTerm>(new Action<MstTerm>(this.attach_MstTerms), new Action<MstTerm>(this.detach_MstTerms));
			this._MstTerms1 = new EntitySet<MstTerm>(new Action<MstTerm>(this.attach_MstTerms1), new Action<MstTerm>(this.detach_MstTerms1));
			this._MstUnits = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits), new Action<MstUnit>(this.detach_MstUnits));
			this._MstUnits1 = new EntitySet<MstUnit>(new Action<MstUnit>(this.attach_MstUnits1), new Action<MstUnit>(this.detach_MstUnits1));
			this._TrnSalesInvoices = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices));
			this._TrnSalesInvoices1 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices1), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices1));
			this._TrnSalesInvoices2 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices2), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices2));
			this._TrnSalesInvoices3 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices3), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices3));
			this._TrnSalesInvoices4 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices4), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices4));
			this._TrnSalesInvoices5 = new EntitySet<TrnSalesInvoice>(new Action<TrnSalesInvoice>(this.attach_TrnSalesInvoices5), new Action<TrnSalesInvoice>(this.detach_TrnSalesInvoices5));
			this._MstArticleGroups = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups), new Action<MstArticleGroup>(this.detach_MstArticleGroups));
			this._MstArticleGroups1 = new EntitySet<MstArticleGroup>(new Action<MstArticleGroup>(this.attach_MstArticleGroups1), new Action<MstArticleGroup>(this.detach_MstArticleGroups1));
			this._MstStatus = new EntitySet<MstStatus>(new Action<MstStatus>(this.attach_MstStatus), new Action<MstStatus>(this.detach_MstStatus));
			this._MstStatus1 = new EntitySet<MstStatus>(new Action<MstStatus>(this.attach_MstStatus1), new Action<MstStatus>(this.detach_MstStatus1));
			this._MstTaxTypes = new EntitySet<MstTaxType>(new Action<MstTaxType>(this.attach_MstTaxTypes), new Action<MstTaxType>(this.detach_MstTaxTypes));
			this._MstTaxTypes1 = new EntitySet<MstTaxType>(new Action<MstTaxType>(this.attach_MstTaxTypes1), new Action<MstTaxType>(this.detach_MstTaxTypes1));
			this._MstCompanies = new EntitySet<MstCompany>(new Action<MstCompany>(this.attach_MstCompanies), new Action<MstCompany>(this.detach_MstCompanies));
			this._MstCompanies1 = new EntitySet<MstCompany>(new Action<MstCompany>(this.attach_MstCompanies1), new Action<MstCompany>(this.detach_MstCompanies1));
			this._MstUserForms = new EntitySet<MstUserForm>(new Action<MstUserForm>(this.attach_MstUserForms), new Action<MstUserForm>(this.detach_MstUserForms));
			this._CrmMstDocuments = new EntitySet<CrmMstDocument>(new Action<CrmMstDocument>(this.attach_CrmMstDocuments), new Action<CrmMstDocument>(this.detach_CrmMstDocuments));
			this._CrmMstDocuments1 = new EntitySet<CrmMstDocument>(new Action<CrmMstDocument>(this.attach_CrmMstDocuments1), new Action<CrmMstDocument>(this.detach_CrmMstDocuments1));
			this._CrmTrnSupports = new EntitySet<CrmTrnSupport>(new Action<CrmTrnSupport>(this.attach_CrmTrnSupports), new Action<CrmTrnSupport>(this.detach_CrmTrnSupports));
			this._CrmTrnSupports1 = new EntitySet<CrmTrnSupport>(new Action<CrmTrnSupport>(this.attach_CrmTrnSupports1), new Action<CrmTrnSupport>(this.detach_CrmTrnSupports1));
			this._CrmTrnSupports2 = new EntitySet<CrmTrnSupport>(new Action<CrmTrnSupport>(this.attach_CrmTrnSupports2), new Action<CrmTrnSupport>(this.detach_CrmTrnSupports2));
			this._CrmTrnLeads = new EntitySet<CrmTrnLead>(new Action<CrmTrnLead>(this.attach_CrmTrnLeads), new Action<CrmTrnLead>(this.detach_CrmTrnLeads));
			this._CrmTrnLeads1 = new EntitySet<CrmTrnLead>(new Action<CrmTrnLead>(this.attach_CrmTrnLeads1), new Action<CrmTrnLead>(this.detach_CrmTrnLeads1));
			this._CrmTrnLeads2 = new EntitySet<CrmTrnLead>(new Action<CrmTrnLead>(this.attach_CrmTrnLeads2), new Action<CrmTrnLead>(this.detach_CrmTrnLeads2));
			this._CrmTrnSoftwareDevelopments = new EntitySet<CrmTrnSoftwareDevelopment>(new Action<CrmTrnSoftwareDevelopment>(this.attach_CrmTrnSoftwareDevelopments), new Action<CrmTrnSoftwareDevelopment>(this.detach_CrmTrnSoftwareDevelopments));
			this._CrmTrnSoftwareDevelopments1 = new EntitySet<CrmTrnSoftwareDevelopment>(new Action<CrmTrnSoftwareDevelopment>(this.attach_CrmTrnSoftwareDevelopments1), new Action<CrmTrnSoftwareDevelopment>(this.detach_CrmTrnSoftwareDevelopments1));
			this._CrmTrnSoftwareDevelopments2 = new EntitySet<CrmTrnSoftwareDevelopment>(new Action<CrmTrnSoftwareDevelopment>(this.attach_CrmTrnSoftwareDevelopments2), new Action<CrmTrnSoftwareDevelopment>(this.detach_CrmTrnSoftwareDevelopments2));
			this._AspNetUser = default(EntityRef<AspNetUser>);
			this._MstAccount = default(EntityRef<MstAccount>);
			this._MstAccount1 = default(EntityRef<MstAccount>);
			this._MstAccount2 = default(EntityRef<MstAccount>);
			this._MstAccount3 = default(EntityRef<MstAccount>);
			this._MstAccount4 = default(EntityRef<MstAccount>);
			this._MstBranch = default(EntityRef<MstBranch>);
			this._MstCompany = default(EntityRef<MstCompany>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="Int NOT NULL")]
		public int CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					if (this._MstCompany.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int NOT NULL")]
		public int BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._MstBranch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncomeAccountId", DbType="Int NOT NULL")]
		public int IncomeAccountId
		{
			get
			{
				return this._IncomeAccountId;
			}
			set
			{
				if ((this._IncomeAccountId != value))
				{
					if (this._MstAccount.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIncomeAccountIdChanging(value);
					this.SendPropertyChanging();
					this._IncomeAccountId = value;
					this.SendPropertyChanged("IncomeAccountId");
					this.OnIncomeAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierAdvancesAccountId", DbType="Int NOT NULL")]
		public int SupplierAdvancesAccountId
		{
			get
			{
				return this._SupplierAdvancesAccountId;
			}
			set
			{
				if ((this._SupplierAdvancesAccountId != value))
				{
					if (this._MstAccount1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierAdvancesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierAdvancesAccountId = value;
					this.SendPropertyChanged("SupplierAdvancesAccountId");
					this.OnSupplierAdvancesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAdvancesAccountId", DbType="Int NOT NULL")]
		public int CustomerAdvancesAccountId
		{
			get
			{
				return this._CustomerAdvancesAccountId;
			}
			set
			{
				if ((this._CustomerAdvancesAccountId != value))
				{
					if (this._MstAccount2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerAdvancesAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerAdvancesAccountId = value;
					this.SendPropertyChanged("CustomerAdvancesAccountId");
					this.OnCustomerAdvancesAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string InventoryType
		{
			get
			{
				return this._InventoryType;
			}
			set
			{
				if ((this._InventoryType != value))
				{
					this.OnInventoryTypeChanging(value);
					this.SendPropertyChanging();
					this._InventoryType = value;
					this.SendPropertyChanged("InventoryType");
					this.OnInventoryTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultSalesInvoiceDiscountId", DbType="Int NOT NULL")]
		public int DefaultSalesInvoiceDiscountId
		{
			get
			{
				return this._DefaultSalesInvoiceDiscountId;
			}
			set
			{
				if ((this._DefaultSalesInvoiceDiscountId != value))
				{
					this.OnDefaultSalesInvoiceDiscountIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultSalesInvoiceDiscountId = value;
					this.SendPropertyChanged("DefaultSalesInvoiceDiscountId");
					this.OnDefaultSalesInvoiceDiscountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SalesInvoiceName
		{
			get
			{
				return this._SalesInvoiceName;
			}
			set
			{
				if ((this._SalesInvoiceName != value))
				{
					this.OnSalesInvoiceNameChanging(value);
					this.SendPropertyChanging();
					this._SalesInvoiceName = value;
					this.SendPropertyChanged("SalesInvoiceName");
					this.OnSalesInvoiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceCheckedById", DbType="Int NOT NULL")]
		public int SalesInvoiceCheckedById
		{
			get
			{
				return this._SalesInvoiceCheckedById;
			}
			set
			{
				if ((this._SalesInvoiceCheckedById != value))
				{
					this.OnSalesInvoiceCheckedByIdChanging(value);
					this.SendPropertyChanging();
					this._SalesInvoiceCheckedById = value;
					this.SendPropertyChanged("SalesInvoiceCheckedById");
					this.OnSalesInvoiceCheckedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalesInvoiceApprovedById", DbType="Int NOT NULL")]
		public int SalesInvoiceApprovedById
		{
			get
			{
				return this._SalesInvoiceApprovedById;
			}
			set
			{
				if ((this._SalesInvoiceApprovedById != value))
				{
					this.OnSalesInvoiceApprovedByIdChanging(value);
					this.SendPropertyChanging();
					this._SalesInvoiceApprovedById = value;
					this.SendPropertyChanged("SalesInvoiceApprovedById");
					this.OnSalesInvoiceApprovedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OfficialReceiptName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string OfficialReceiptName
		{
			get
			{
				return this._OfficialReceiptName;
			}
			set
			{
				if ((this._OfficialReceiptName != value))
				{
					this.OnOfficialReceiptNameChanging(value);
					this.SendPropertyChanging();
					this._OfficialReceiptName = value;
					this.SendPropertyChanged("OfficialReceiptName");
					this.OnOfficialReceiptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsIncludeCostStockReports", DbType="Bit NOT NULL")]
		public bool IsIncludeCostStockReports
		{
			get
			{
				return this._IsIncludeCostStockReports;
			}
			set
			{
				if ((this._IsIncludeCostStockReports != value))
				{
					this.OnIsIncludeCostStockReportsChanging(value);
					this.SendPropertyChanging();
					this._IsIncludeCostStockReports = value;
					this.SendPropertyChanged("IsIncludeCostStockReports");
					this.OnIsIncludeCostStockReportsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivateAuditTrail", DbType="Bit NOT NULL")]
		public bool ActivateAuditTrail
		{
			get
			{
				return this._ActivateAuditTrail;
			}
			set
			{
				if ((this._ActivateAuditTrail != value))
				{
					this.OnActivateAuditTrailChanging(value);
					this.SendPropertyChanging();
					this._ActivateAuditTrail = value;
					this.SendPropertyChanged("ActivateAuditTrail");
					this.OnActivateAuditTrailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSIVATAnalysisIncluded", DbType="Bit NOT NULL")]
		public bool IsSIVATAnalysisIncluded
		{
			get
			{
				return this._IsSIVATAnalysisIncluded;
			}
			set
			{
				if ((this._IsSIVATAnalysisIncluded != value))
				{
					this.OnIsSIVATAnalysisIncludedChanging(value);
					this.SendPropertyChanging();
					this._IsSIVATAnalysisIncluded = value;
					this.SendPropertyChanged("IsSIVATAnalysisIncluded");
					this.OnIsSIVATAnalysisIncludedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSIDuplicateDocumentReferenceAllowed", DbType="Bit NOT NULL")]
		public bool IsSIDuplicateDocumentReferenceAllowed
		{
			get
			{
				return this._IsSIDuplicateDocumentReferenceAllowed;
			}
			set
			{
				if ((this._IsSIDuplicateDocumentReferenceAllowed != value))
				{
					this.OnIsSIDuplicateDocumentReferenceAllowedChanging(value);
					this.SendPropertyChanging();
					this._IsSIDuplicateDocumentReferenceAllowed = value;
					this.SendPropertyChanged("IsSIDuplicateDocumentReferenceAllowed");
					this.OnIsSIDuplicateDocumentReferenceAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerReturnAccountId", DbType="Int NOT NULL")]
		public int CustomerReturnAccountId
		{
			get
			{
				return this._CustomerReturnAccountId;
			}
			set
			{
				if ((this._CustomerReturnAccountId != value))
				{
					if (this._MstAccount3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerReturnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerReturnAccountId = value;
					this.SendPropertyChanged("CustomerReturnAccountId");
					this.OnCustomerReturnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierReturnAccountId", DbType="Int NOT NULL")]
		public int SupplierReturnAccountId
		{
			get
			{
				return this._SupplierReturnAccountId;
			}
			set
			{
				if ((this._SupplierReturnAccountId != value))
				{
					if (this._MstAccount4.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierReturnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierReturnAccountId = value;
					this.SendPropertyChanged("SupplierReturnAccountId");
					this.OnSupplierReturnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRMUserGroup", DbType="NVarChar(50)")]
		public string CRMUserGroup
		{
			get
			{
				return this._CRMUserGroup;
			}
			set
			{
				if ((this._CRMUserGroup != value))
				{
					this.OnCRMUserGroupChanging(value);
					this.SendPropertyChanging();
					this._CRMUserGroup = value;
					this.SendPropertyChanged("CRMUserGroup");
					this.OnCRMUserGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedById", DbType="Int")]
		public System.Nullable<int> CreatedById
		{
			get
			{
				return this._CreatedById;
			}
			set
			{
				if ((this._CreatedById != value))
				{
					this.OnCreatedByIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedById = value;
					this.SendPropertyChanged("CreatedById");
					this.OnCreatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedById", DbType="Int")]
		public System.Nullable<int> UpdatedById
		{
			get
			{
				return this._UpdatedById;
			}
			set
			{
				if ((this._UpdatedById != value))
				{
					this.OnUpdatedByIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedById = value;
					this.SendPropertyChanged("UpdatedById");
					this.OnUpdatedByIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstProduct", Storage="_CrmMstProducts", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<CrmMstProduct> CrmMstProducts
		{
			get
			{
				return this._CrmMstProducts;
			}
			set
			{
				this._CrmMstProducts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstProduct1", Storage="_CrmMstProducts1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<CrmMstProduct> CrmMstProducts1
		{
			get
			{
				return this._CrmMstProducts1;
			}
			set
			{
				this._CrmMstProducts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity", Storage="_CrmTrnActivities", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities
		{
			get
			{
				return this._CrmTrnActivities;
			}
			set
			{
				this._CrmTrnActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity1", Storage="_CrmTrnActivities1", ThisKey="Id", OtherKey="FunctionalUserId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities1
		{
			get
			{
				return this._CrmTrnActivities1;
			}
			set
			{
				this._CrmTrnActivities1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity2", Storage="_CrmTrnActivities2", ThisKey="Id", OtherKey="TechnicalUserId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities2
		{
			get
			{
				return this._CrmTrnActivities2;
			}
			set
			{
				this._CrmTrnActivities2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity3", Storage="_CrmTrnActivities3", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities3
		{
			get
			{
				return this._CrmTrnActivities3;
			}
			set
			{
				this._CrmTrnActivities3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnActivity4", Storage="_CrmTrnActivities4", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities4
		{
			get
			{
				return this._CrmTrnActivities4;
			}
			set
			{
				this._CrmTrnActivities4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSalesDelivery", Storage="_CrmTrnSalesDeliveries", ThisKey="Id", OtherKey="AssignedToUserId")]
		public EntitySet<CrmTrnSalesDelivery> CrmTrnSalesDeliveries
		{
			get
			{
				return this._CrmTrnSalesDeliveries;
			}
			set
			{
				this._CrmTrnSalesDeliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSalesDelivery1", Storage="_CrmTrnSalesDeliveries1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<CrmTrnSalesDelivery> CrmTrnSalesDeliveries1
		{
			get
			{
				return this._CrmTrnSalesDeliveries1;
			}
			set
			{
				this._CrmTrnSalesDeliveries1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSalesDelivery2", Storage="_CrmTrnSalesDeliveries2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<CrmTrnSalesDelivery> CrmTrnSalesDeliveries2
		{
			get
			{
				return this._CrmTrnSalesDeliveries2;
			}
			set
			{
				this._CrmTrnSalesDeliveries2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount", Storage="_MstAccounts", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstAccount> MstAccounts
		{
			get
			{
				return this._MstAccounts;
			}
			set
			{
				this._MstAccounts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstAccount1", Storage="_MstAccounts1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstAccount> MstAccounts1
		{
			get
			{
				return this._MstAccounts1;
			}
			set
			{
				this._MstAccounts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle", Storage="_MstArticles", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstArticle> MstArticles
		{
			get
			{
				return this._MstArticles;
			}
			set
			{
				this._MstArticles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticle1", Storage="_MstArticles1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstArticle> MstArticles1
		{
			get
			{
				return this._MstArticles1;
			}
			set
			{
				this._MstArticles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType", Storage="_MstArticleTypes", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstArticleType> MstArticleTypes
		{
			get
			{
				return this._MstArticleTypes;
			}
			set
			{
				this._MstArticleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleType1", Storage="_MstArticleTypes1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstArticleType> MstArticleTypes1
		{
			get
			{
				return this._MstArticleTypes1;
			}
			set
			{
				this._MstArticleTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch", Storage="_MstBranches", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstBranch> MstBranches
		{
			get
			{
				return this._MstBranches;
			}
			set
			{
				this._MstBranches.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstBranch1", Storage="_MstBranches1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstBranch> MstBranches1
		{
			get
			{
				return this._MstBranches1;
			}
			set
			{
				this._MstBranches1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm", Storage="_MstTerms", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstTerm> MstTerms
		{
			get
			{
				return this._MstTerms;
			}
			set
			{
				this._MstTerms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTerm1", Storage="_MstTerms1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstTerm> MstTerms1
		{
			get
			{
				return this._MstTerms1;
			}
			set
			{
				this._MstTerms1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit", Storage="_MstUnits", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstUnit> MstUnits
		{
			get
			{
				return this._MstUnits;
			}
			set
			{
				this._MstUnits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUnit1", Storage="_MstUnits1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstUnit> MstUnits1
		{
			get
			{
				return this._MstUnits1;
			}
			set
			{
				this._MstUnits1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice", Storage="_TrnSalesInvoices", ThisKey="Id", OtherKey="ApprovedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices
		{
			get
			{
				return this._TrnSalesInvoices;
			}
			set
			{
				this._TrnSalesInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice1", Storage="_TrnSalesInvoices1", ThisKey="Id", OtherKey="CheckedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices1
		{
			get
			{
				return this._TrnSalesInvoices1;
			}
			set
			{
				this._TrnSalesInvoices1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice2", Storage="_TrnSalesInvoices2", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices2
		{
			get
			{
				return this._TrnSalesInvoices2;
			}
			set
			{
				this._TrnSalesInvoices2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice3", Storage="_TrnSalesInvoices3", ThisKey="Id", OtherKey="PreparedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices3
		{
			get
			{
				return this._TrnSalesInvoices3;
			}
			set
			{
				this._TrnSalesInvoices3.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice4", Storage="_TrnSalesInvoices4", ThisKey="Id", OtherKey="SoldById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices4
		{
			get
			{
				return this._TrnSalesInvoices4;
			}
			set
			{
				this._TrnSalesInvoices4.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_TrnSalesInvoice5", Storage="_TrnSalesInvoices5", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<TrnSalesInvoice> TrnSalesInvoices5
		{
			get
			{
				return this._TrnSalesInvoices5;
			}
			set
			{
				this._TrnSalesInvoices5.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleGroup", Storage="_MstArticleGroups", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstArticleGroup> MstArticleGroups
		{
			get
			{
				return this._MstArticleGroups;
			}
			set
			{
				this._MstArticleGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstArticleGroup1", Storage="_MstArticleGroups1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstArticleGroup> MstArticleGroups1
		{
			get
			{
				return this._MstArticleGroups1;
			}
			set
			{
				this._MstArticleGroups1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstStatus", Storage="_MstStatus", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstStatus> MstStatus
		{
			get
			{
				return this._MstStatus;
			}
			set
			{
				this._MstStatus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstStatus1", Storage="_MstStatus1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstStatus> MstStatus1
		{
			get
			{
				return this._MstStatus1;
			}
			set
			{
				this._MstStatus1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType", Storage="_MstTaxTypes", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstTaxType> MstTaxTypes
		{
			get
			{
				return this._MstTaxTypes;
			}
			set
			{
				this._MstTaxTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstTaxType1", Storage="_MstTaxTypes1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstTaxType> MstTaxTypes1
		{
			get
			{
				return this._MstTaxTypes1;
			}
			set
			{
				this._MstTaxTypes1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany", Storage="_MstCompanies", ThisKey="Id", OtherKey="CreatedById")]
		public EntitySet<MstCompany> MstCompanies
		{
			get
			{
				return this._MstCompanies;
			}
			set
			{
				this._MstCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstCompany1", Storage="_MstCompanies1", ThisKey="Id", OtherKey="UpdatedById")]
		public EntitySet<MstCompany> MstCompanies1
		{
			get
			{
				return this._MstCompanies1;
			}
			set
			{
				this._MstCompanies1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_MstUserForm", Storage="_MstUserForms", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<MstUserForm> MstUserForms
		{
			get
			{
				return this._MstUserForms;
			}
			set
			{
				this._MstUserForms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstDocument", Storage="_CrmMstDocuments", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<CrmMstDocument> CrmMstDocuments
		{
			get
			{
				return this._CrmMstDocuments;
			}
			set
			{
				this._CrmMstDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstDocument1", Storage="_CrmMstDocuments1", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<CrmMstDocument> CrmMstDocuments1
		{
			get
			{
				return this._CrmMstDocuments1;
			}
			set
			{
				this._CrmMstDocuments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSupport", Storage="_CrmTrnSupports", ThisKey="Id", OtherKey="AssignedToUserId")]
		public EntitySet<CrmTrnSupport> CrmTrnSupports
		{
			get
			{
				return this._CrmTrnSupports;
			}
			set
			{
				this._CrmTrnSupports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSupport1", Storage="_CrmTrnSupports1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<CrmTrnSupport> CrmTrnSupports1
		{
			get
			{
				return this._CrmTrnSupports1;
			}
			set
			{
				this._CrmTrnSupports1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSupport2", Storage="_CrmTrnSupports2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<CrmTrnSupport> CrmTrnSupports2
		{
			get
			{
				return this._CrmTrnSupports2;
			}
			set
			{
				this._CrmTrnSupports2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnLead", Storage="_CrmTrnLeads", ThisKey="Id", OtherKey="AssignedToUserId")]
		public EntitySet<CrmTrnLead> CrmTrnLeads
		{
			get
			{
				return this._CrmTrnLeads;
			}
			set
			{
				this._CrmTrnLeads.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnLead1", Storage="_CrmTrnLeads1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<CrmTrnLead> CrmTrnLeads1
		{
			get
			{
				return this._CrmTrnLeads1;
			}
			set
			{
				this._CrmTrnLeads1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnLead2", Storage="_CrmTrnLeads2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<CrmTrnLead> CrmTrnLeads2
		{
			get
			{
				return this._CrmTrnLeads2;
			}
			set
			{
				this._CrmTrnLeads2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSoftwareDevelopment", Storage="_CrmTrnSoftwareDevelopments", ThisKey="Id", OtherKey="AssignedToUserId")]
		public EntitySet<CrmTrnSoftwareDevelopment> CrmTrnSoftwareDevelopments
		{
			get
			{
				return this._CrmTrnSoftwareDevelopments;
			}
			set
			{
				this._CrmTrnSoftwareDevelopments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSoftwareDevelopment1", Storage="_CrmTrnSoftwareDevelopments1", ThisKey="Id", OtherKey="CreatedByUserId")]
		public EntitySet<CrmTrnSoftwareDevelopment> CrmTrnSoftwareDevelopments1
		{
			get
			{
				return this._CrmTrnSoftwareDevelopments1;
			}
			set
			{
				this._CrmTrnSoftwareDevelopments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSoftwareDevelopment2", Storage="_CrmTrnSoftwareDevelopments2", ThisKey="Id", OtherKey="UpdatedByUserId")]
		public EntitySet<CrmTrnSoftwareDevelopment> CrmTrnSoftwareDevelopments2
		{
			get
			{
				return this._CrmTrnSoftwareDevelopments2;
			}
			set
			{
				this._CrmTrnSoftwareDevelopments2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_MstUser", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true)]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser", Storage="_MstAccount", ThisKey="IncomeAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount
		{
			get
			{
				return this._MstAccount.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstAccount.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._IncomeAccountId = value.Id;
					}
					else
					{
						this._IncomeAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser1", Storage="_MstAccount1", ThisKey="SupplierAdvancesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount1
		{
			get
			{
				return this._MstAccount1.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount1.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount1.Entity = null;
						previousValue.MstUsers1.Remove(this);
					}
					this._MstAccount1.Entity = value;
					if ((value != null))
					{
						value.MstUsers1.Add(this);
						this._SupplierAdvancesAccountId = value.Id;
					}
					else
					{
						this._SupplierAdvancesAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser2", Storage="_MstAccount2", ThisKey="CustomerAdvancesAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount2
		{
			get
			{
				return this._MstAccount2.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount2.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount2.Entity = null;
						previousValue.MstUsers2.Remove(this);
					}
					this._MstAccount2.Entity = value;
					if ((value != null))
					{
						value.MstUsers2.Add(this);
						this._CustomerAdvancesAccountId = value.Id;
					}
					else
					{
						this._CustomerAdvancesAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser3", Storage="_MstAccount3", ThisKey="CustomerReturnAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount3
		{
			get
			{
				return this._MstAccount3.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount3.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount3.Entity = null;
						previousValue.MstUsers3.Remove(this);
					}
					this._MstAccount3.Entity = value;
					if ((value != null))
					{
						value.MstUsers3.Add(this);
						this._CustomerReturnAccountId = value.Id;
					}
					else
					{
						this._CustomerReturnAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount3");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstAccount_MstUser4", Storage="_MstAccount4", ThisKey="SupplierReturnAccountId", OtherKey="Id", IsForeignKey=true)]
		public MstAccount MstAccount4
		{
			get
			{
				return this._MstAccount4.Entity;
			}
			set
			{
				MstAccount previousValue = this._MstAccount4.Entity;
				if (((previousValue != value) 
							|| (this._MstAccount4.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstAccount4.Entity = null;
						previousValue.MstUsers4.Remove(this);
					}
					this._MstAccount4.Entity = value;
					if ((value != null))
					{
						value.MstUsers4.Add(this);
						this._SupplierReturnAccountId = value.Id;
					}
					else
					{
						this._SupplierReturnAccountId = default(int);
					}
					this.SendPropertyChanged("MstAccount4");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstBranch_MstUser", Storage="_MstBranch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public MstBranch MstBranch
		{
			get
			{
				return this._MstBranch.Entity;
			}
			set
			{
				MstBranch previousValue = this._MstBranch.Entity;
				if (((previousValue != value) 
							|| (this._MstBranch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstBranch.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstBranch.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(int);
					}
					this.SendPropertyChanged("MstBranch");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstCompany_MstUser", Storage="_MstCompany", ThisKey="CompanyId", OtherKey="Id", IsForeignKey=true)]
		public MstCompany MstCompany
		{
			get
			{
				return this._MstCompany.Entity;
			}
			set
			{
				MstCompany previousValue = this._MstCompany.Entity;
				if (((previousValue != value) 
							|| (this._MstCompany.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstCompany.Entity = null;
						previousValue.MstUsers.Remove(this);
					}
					this._MstCompany.Entity = value;
					if ((value != null))
					{
						value.MstUsers.Add(this);
						this._CompanyId = value.Id;
					}
					else
					{
						this._CompanyId = default(int);
					}
					this.SendPropertyChanged("MstCompany");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrmMstProducts(CrmMstProduct entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_CrmMstProducts(CrmMstProduct entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmMstProducts1(CrmMstProduct entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_CrmMstProducts1(CrmMstProduct entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmTrnActivities1(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_CrmTrnActivities1(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_CrmTrnActivities2(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_CrmTrnActivities2(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_CrmTrnActivities3(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_CrmTrnActivities3(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_CrmTrnActivities4(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_CrmTrnActivities4(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmTrnSalesDeliveries1(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_CrmTrnSalesDeliveries1(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_CrmTrnSalesDeliveries2(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_CrmTrnSalesDeliveries2(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstAccounts(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstAccounts1(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstAccounts1(MstAccount entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstArticles(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstArticles1(MstArticle entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstArticleTypes(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstArticleTypes(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstArticleTypes1(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstArticleTypes1(MstArticleType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstBranches(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstBranches1(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstBranches1(MstBranch entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstTerms(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstTerms(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstTerms1(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstTerms1(MstTerm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUnits(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstUnits1(MstUnit entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_TrnSalesInvoices(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_TrnSalesInvoices1(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_TrnSalesInvoices1(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_TrnSalesInvoices2(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_TrnSalesInvoices2(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_TrnSalesInvoices3(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = this;
		}
		
		private void detach_TrnSalesInvoices3(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser3 = null;
		}
		
		private void attach_TrnSalesInvoices4(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = this;
		}
		
		private void detach_TrnSalesInvoices4(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser4 = null;
		}
		
		private void attach_TrnSalesInvoices5(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = this;
		}
		
		private void detach_TrnSalesInvoices5(TrnSalesInvoice entity)
		{
			this.SendPropertyChanging();
			entity.MstUser5 = null;
		}
		
		private void attach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstArticleGroups(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstArticleGroups1(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstArticleGroups1(MstArticleGroup entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstStatus(MstStatus entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstStatus(MstStatus entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstStatus1(MstStatus entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstStatus1(MstStatus entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstTaxTypes(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstTaxTypes1(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstTaxTypes1(MstTaxType entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstCompanies(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstCompanies(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_MstCompanies1(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_MstCompanies1(MstCompany entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_MstUserForms(MstUserForm entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmMstDocuments(CrmMstDocument entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_CrmMstDocuments(CrmMstDocument entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmMstDocuments1(CrmMstDocument entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_CrmMstDocuments1(CrmMstDocument entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_CrmTrnSupports(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_CrmTrnSupports(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmTrnSupports1(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_CrmTrnSupports1(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_CrmTrnSupports2(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_CrmTrnSupports2(CrmTrnSupport entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_CrmTrnLeads(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_CrmTrnLeads(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmTrnLeads1(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_CrmTrnLeads1(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_CrmTrnLeads2(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_CrmTrnLeads2(CrmTrnLead entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
		
		private void attach_CrmTrnSoftwareDevelopments(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = this;
		}
		
		private void detach_CrmTrnSoftwareDevelopments(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.MstUser = null;
		}
		
		private void attach_CrmTrnSoftwareDevelopments1(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = this;
		}
		
		private void detach_CrmTrnSoftwareDevelopments1(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.MstUser1 = null;
		}
		
		private void attach_CrmTrnSoftwareDevelopments2(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = this;
		}
		
		private void detach_CrmTrnSoftwareDevelopments2(CrmTrnSoftwareDevelopment entity)
		{
			this.SendPropertyChanging();
			entity.MstUser2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmMstDocument")]
	public partial class CrmMstDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DocumentName;
		
		private string _DocumentType;
		
		private string _DocumentURL;
		
		private string _DocumentGroup;
		
		private System.DateTime _DateUploaded;
		
		private string _Particulars;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnDocumentTypeChanging(string value);
    partial void OnDocumentTypeChanged();
    partial void OnDocumentURLChanging(string value);
    partial void OnDocumentURLChanged();
    partial void OnDocumentGroupChanging(string value);
    partial void OnDocumentGroupChanged();
    partial void OnDateUploadedChanging(System.DateTime value);
    partial void OnDateUploadedChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public CrmMstDocument()
		{
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentType
		{
			get
			{
				return this._DocumentType;
			}
			set
			{
				if ((this._DocumentType != value))
				{
					this.OnDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._DocumentType = value;
					this.SendPropertyChanged("DocumentType");
					this.OnDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentURL", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DocumentURL
		{
			get
			{
				return this._DocumentURL;
			}
			set
			{
				if ((this._DocumentURL != value))
				{
					this.OnDocumentURLChanging(value);
					this.SendPropertyChanging();
					this._DocumentURL = value;
					this.SendPropertyChanged("DocumentURL");
					this.OnDocumentURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocumentGroup
		{
			get
			{
				return this._DocumentGroup;
			}
			set
			{
				if ((this._DocumentGroup != value))
				{
					this.OnDocumentGroupChanging(value);
					this.SendPropertyChanging();
					this._DocumentGroup = value;
					this.SendPropertyChanged("DocumentGroup");
					this.OnDocumentGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUploaded", DbType="DateTime NOT NULL")]
		public System.DateTime DateUploaded
		{
			get
			{
				return this._DateUploaded;
			}
			set
			{
				if ((this._DateUploaded != value))
				{
					this.OnDateUploadedChanging(value);
					this.SendPropertyChanging();
					this._DateUploaded = value;
					this.SendPropertyChanged("DateUploaded");
					this.OnDateUploadedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstDocument", Storage="_MstUser", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.CrmMstDocuments.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.CrmMstDocuments.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmMstDocument1", Storage="_MstUser1", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.CrmMstDocuments1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.CrmMstDocuments1.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmTrnSupportAttachment")]
	public partial class CrmTrnSupportAttachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SPId;
		
		private string _Attachment;
		
		private string _AttachmentURL;
		
		private string _AttachmentType;
		
		private string _Particulars;
		
		private EntityRef<CrmTrnSupport> _CrmTrnSupport;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSPIdChanging(int value);
    partial void OnSPIdChanged();
    partial void OnAttachmentChanging(string value);
    partial void OnAttachmentChanged();
    partial void OnAttachmentURLChanging(string value);
    partial void OnAttachmentURLChanged();
    partial void OnAttachmentTypeChanging(string value);
    partial void OnAttachmentTypeChanged();
    partial void OnParticularsChanging(string value);
    partial void OnParticularsChanged();
    #endregion
		
		public CrmTrnSupportAttachment()
		{
			this._CrmTrnSupport = default(EntityRef<CrmTrnSupport>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPId", DbType="Int NOT NULL")]
		public int SPId
		{
			get
			{
				return this._SPId;
			}
			set
			{
				if ((this._SPId != value))
				{
					if (this._CrmTrnSupport.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSPIdChanging(value);
					this.SendPropertyChanging();
					this._SPId = value;
					this.SendPropertyChanged("SPId");
					this.OnSPIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentURL", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AttachmentURL
		{
			get
			{
				return this._AttachmentURL;
			}
			set
			{
				if ((this._AttachmentURL != value))
				{
					this.OnAttachmentURLChanging(value);
					this.SendPropertyChanging();
					this._AttachmentURL = value;
					this.SendPropertyChanged("AttachmentURL");
					this.OnAttachmentURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AttachmentType
		{
			get
			{
				return this._AttachmentType;
			}
			set
			{
				if ((this._AttachmentType != value))
				{
					this.OnAttachmentTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachmentType = value;
					this.SendPropertyChanged("AttachmentType");
					this.OnAttachmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Particulars", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Particulars
		{
			get
			{
				return this._Particulars;
			}
			set
			{
				if ((this._Particulars != value))
				{
					this.OnParticularsChanging(value);
					this.SendPropertyChanging();
					this._Particulars = value;
					this.SendPropertyChanged("Particulars");
					this.OnParticularsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSupport_CrmTrnSupportAttachment", Storage="_CrmTrnSupport", ThisKey="SPId", OtherKey="Id", IsForeignKey=true)]
		public CrmTrnSupport CrmTrnSupport
		{
			get
			{
				return this._CrmTrnSupport.Entity;
			}
			set
			{
				CrmTrnSupport previousValue = this._CrmTrnSupport.Entity;
				if (((previousValue != value) 
							|| (this._CrmTrnSupport.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmTrnSupport.Entity = null;
						previousValue.CrmTrnSupportAttachments.Remove(this);
					}
					this._CrmTrnSupport.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSupportAttachments.Add(this);
						this._SPId = value.Id;
					}
					else
					{
						this._SPId = default(int);
					}
					this.SendPropertyChanged("CrmTrnSupport");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmTrnSupport")]
	public partial class CrmTrnSupport : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SPNumber;
		
		private System.DateTime _SPDate;
		
		private int _CustomerId;
		
		private string _PointOfContact;
		
		private int _SDId;
		
		private string _ContactPerson;
		
		private string _ContactPosition;
		
		private string _ContactEmail;
		
		private string _ContactPhoneNumber;
		
		private string _Issue;
		
		private int _AssignedToUserId;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities;
		
		private EntitySet<CrmTrnSupportAttachment> _CrmTrnSupportAttachments;
		
		private EntityRef<MstArticle> _MstArticle;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
		private EntityRef<CrmTrnSalesDelivery> _CrmTrnSalesDelivery;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSPNumberChanging(string value);
    partial void OnSPNumberChanged();
    partial void OnSPDateChanging(System.DateTime value);
    partial void OnSPDateChanged();
    partial void OnCustomerIdChanging(int value);
    partial void OnCustomerIdChanged();
    partial void OnPointOfContactChanging(string value);
    partial void OnPointOfContactChanged();
    partial void OnSDIdChanging(int value);
    partial void OnSDIdChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPositionChanging(string value);
    partial void OnContactPositionChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnContactPhoneNumberChanging(string value);
    partial void OnContactPhoneNumberChanged();
    partial void OnIssueChanging(string value);
    partial void OnIssueChanged();
    partial void OnAssignedToUserIdChanging(int value);
    partial void OnAssignedToUserIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public CrmTrnSupport()
		{
			this._CrmTrnActivities = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities));
			this._CrmTrnSupportAttachments = new EntitySet<CrmTrnSupportAttachment>(new Action<CrmTrnSupportAttachment>(this.attach_CrmTrnSupportAttachments), new Action<CrmTrnSupportAttachment>(this.detach_CrmTrnSupportAttachments));
			this._MstArticle = default(EntityRef<MstArticle>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			this._CrmTrnSalesDelivery = default(EntityRef<CrmTrnSalesDelivery>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SPNumber
		{
			get
			{
				return this._SPNumber;
			}
			set
			{
				if ((this._SPNumber != value))
				{
					this.OnSPNumberChanging(value);
					this.SendPropertyChanging();
					this._SPNumber = value;
					this.SendPropertyChanged("SPNumber");
					this.OnSPNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPDate", DbType="DateTime NOT NULL")]
		public System.DateTime SPDate
		{
			get
			{
				return this._SPDate;
			}
			set
			{
				if ((this._SPDate != value))
				{
					this.OnSPDateChanging(value);
					this.SendPropertyChanging();
					this._SPDate = value;
					this.SendPropertyChanged("SPDate");
					this.OnSPDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._MstArticle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PointOfContact", DbType="NVarChar(255)")]
		public string PointOfContact
		{
			get
			{
				return this._PointOfContact;
			}
			set
			{
				if ((this._PointOfContact != value))
				{
					this.OnPointOfContactChanging(value);
					this.SendPropertyChanging();
					this._PointOfContact = value;
					this.SendPropertyChanged("PointOfContact");
					this.OnPointOfContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDId", DbType="Int NOT NULL")]
		public int SDId
		{
			get
			{
				return this._SDId;
			}
			set
			{
				if ((this._SDId != value))
				{
					if (this._CrmTrnSalesDelivery.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSDIdChanging(value);
					this.SendPropertyChanging();
					this._SDId = value;
					this.SendPropertyChanged("SDId");
					this.OnSDIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPosition", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPosition
		{
			get
			{
				return this._ContactPosition;
			}
			set
			{
				if ((this._ContactPosition != value))
				{
					this.OnContactPositionChanging(value);
					this.SendPropertyChanging();
					this._ContactPosition = value;
					this.SendPropertyChanged("ContactPosition");
					this.OnContactPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhoneNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPhoneNumber
		{
			get
			{
				return this._ContactPhoneNumber;
			}
			set
			{
				if ((this._ContactPhoneNumber != value))
				{
					this.OnContactPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactPhoneNumber = value;
					this.SendPropertyChanged("ContactPhoneNumber");
					this.OnContactPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this.OnIssueChanging(value);
					this.SendPropertyChanging();
					this._Issue = value;
					this.SendPropertyChanged("Issue");
					this.OnIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedToUserId", DbType="Int NOT NULL")]
		public int AssignedToUserId
		{
			get
			{
				return this._AssignedToUserId;
			}
			set
			{
				if ((this._AssignedToUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignedToUserIdChanging(value);
					this.SendPropertyChanging();
					this._AssignedToUserId = value;
					this.SendPropertyChanged("AssignedToUserId");
					this.OnAssignedToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSupport_CrmTrnActivity", Storage="_CrmTrnActivities", ThisKey="Id", OtherKey="SPId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities
		{
			get
			{
				return this._CrmTrnActivities;
			}
			set
			{
				this._CrmTrnActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSupport_CrmTrnSupportAttachment", Storage="_CrmTrnSupportAttachments", ThisKey="Id", OtherKey="SPId")]
		public EntitySet<CrmTrnSupportAttachment> CrmTrnSupportAttachments
		{
			get
			{
				return this._CrmTrnSupportAttachments;
			}
			set
			{
				this._CrmTrnSupportAttachments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstArticle_CrmTrnSupport", Storage="_MstArticle", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public MstArticle MstArticle
		{
			get
			{
				return this._MstArticle.Entity;
			}
			set
			{
				MstArticle previousValue = this._MstArticle.Entity;
				if (((previousValue != value) 
							|| (this._MstArticle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstArticle.Entity = null;
						previousValue.CrmTrnSupports.Remove(this);
					}
					this._MstArticle.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSupports.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(int);
					}
					this.SendPropertyChanged("MstArticle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSupport", Storage="_MstUser", ThisKey="AssignedToUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.CrmTrnSupports.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSupports.Add(this);
						this._AssignedToUserId = value.Id;
					}
					else
					{
						this._AssignedToUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSupport1", Storage="_MstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.CrmTrnSupports1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSupports1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSupport2", Storage="_MstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.CrmTrnSupports2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSupports2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnSalesDelivery_CrmTrnSupport", Storage="_CrmTrnSalesDelivery", ThisKey="SDId", OtherKey="Id", IsForeignKey=true)]
		public CrmTrnSalesDelivery CrmTrnSalesDelivery
		{
			get
			{
				return this._CrmTrnSalesDelivery.Entity;
			}
			set
			{
				CrmTrnSalesDelivery previousValue = this._CrmTrnSalesDelivery.Entity;
				if (((previousValue != value) 
							|| (this._CrmTrnSalesDelivery.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmTrnSalesDelivery.Entity = null;
						previousValue.CrmTrnSupports.Remove(this);
					}
					this._CrmTrnSalesDelivery.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSupports.Add(this);
						this._SDId = value.Id;
					}
					else
					{
						this._SDId = default(int);
					}
					this.SendPropertyChanged("CrmTrnSalesDelivery");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSupport = this;
		}
		
		private void detach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSupport = null;
		}
		
		private void attach_CrmTrnSupportAttachments(CrmTrnSupportAttachment entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSupport = this;
		}
		
		private void detach_CrmTrnSupportAttachments(CrmTrnSupportAttachment entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnSupport = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmTrnLead")]
	public partial class CrmTrnLead : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _LDNumber;
		
		private System.DateTime _LDDate;
		
		private string _Name;
		
		private int _ProductId;
		
		private decimal _TotalAmount;
		
		private string _Address;
		
		private string _ContactPerson;
		
		private string _ContactPosition;
		
		private string _ContactEmail;
		
		private string _ContactPhoneNumber;
		
		private string _ReferredBy;
		
		private string _Remarks;
		
		private int _AssignedToUserId;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntitySet<CrmTrnActivity> _CrmTrnActivities;
		
		private EntitySet<CrmTrnSalesDelivery> _CrmTrnSalesDeliveries;
		
		private EntityRef<CrmMstProduct> _CrmMstProduct;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLDNumberChanging(string value);
    partial void OnLDNumberChanged();
    partial void OnLDDateChanging(System.DateTime value);
    partial void OnLDDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnTotalAmountChanging(decimal value);
    partial void OnTotalAmountChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactPersonChanging(string value);
    partial void OnContactPersonChanged();
    partial void OnContactPositionChanging(string value);
    partial void OnContactPositionChanged();
    partial void OnContactEmailChanging(string value);
    partial void OnContactEmailChanged();
    partial void OnContactPhoneNumberChanging(string value);
    partial void OnContactPhoneNumberChanged();
    partial void OnReferredByChanging(string value);
    partial void OnReferredByChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAssignedToUserIdChanging(int value);
    partial void OnAssignedToUserIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public CrmTrnLead()
		{
			this._CrmTrnActivities = new EntitySet<CrmTrnActivity>(new Action<CrmTrnActivity>(this.attach_CrmTrnActivities), new Action<CrmTrnActivity>(this.detach_CrmTrnActivities));
			this._CrmTrnSalesDeliveries = new EntitySet<CrmTrnSalesDelivery>(new Action<CrmTrnSalesDelivery>(this.attach_CrmTrnSalesDeliveries), new Action<CrmTrnSalesDelivery>(this.detach_CrmTrnSalesDeliveries));
			this._CrmMstProduct = default(EntityRef<CrmMstProduct>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LDNumber
		{
			get
			{
				return this._LDNumber;
			}
			set
			{
				if ((this._LDNumber != value))
				{
					this.OnLDNumberChanging(value);
					this.SendPropertyChanging();
					this._LDNumber = value;
					this.SendPropertyChanged("LDNumber");
					this.OnLDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LDDate", DbType="DateTime NOT NULL")]
		public System.DateTime LDDate
		{
			get
			{
				return this._LDDate;
			}
			set
			{
				if ((this._LDDate != value))
				{
					this.OnLDDateChanging(value);
					this.SendPropertyChanging();
					this._LDDate = value;
					this.SendPropertyChanged("LDDate");
					this.OnLDDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._CrmMstProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAmount", DbType="Decimal(18,0) NOT NULL")]
		public decimal TotalAmount
		{
			get
			{
				return this._TotalAmount;
			}
			set
			{
				if ((this._TotalAmount != value))
				{
					this.OnTotalAmountChanging(value);
					this.SendPropertyChanging();
					this._TotalAmount = value;
					this.SendPropertyChanged("TotalAmount");
					this.OnTotalAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPerson", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPerson
		{
			get
			{
				return this._ContactPerson;
			}
			set
			{
				if ((this._ContactPerson != value))
				{
					this.OnContactPersonChanging(value);
					this.SendPropertyChanging();
					this._ContactPerson = value;
					this.SendPropertyChanged("ContactPerson");
					this.OnContactPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPosition", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPosition
		{
			get
			{
				return this._ContactPosition;
			}
			set
			{
				if ((this._ContactPosition != value))
				{
					this.OnContactPositionChanging(value);
					this.SendPropertyChanging();
					this._ContactPosition = value;
					this.SendPropertyChanged("ContactPosition");
					this.OnContactPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactEmail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactEmail
		{
			get
			{
				return this._ContactEmail;
			}
			set
			{
				if ((this._ContactEmail != value))
				{
					this.OnContactEmailChanging(value);
					this.SendPropertyChanging();
					this._ContactEmail = value;
					this.SendPropertyChanged("ContactEmail");
					this.OnContactEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhoneNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ContactPhoneNumber
		{
			get
			{
				return this._ContactPhoneNumber;
			}
			set
			{
				if ((this._ContactPhoneNumber != value))
				{
					this.OnContactPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactPhoneNumber = value;
					this.SendPropertyChanged("ContactPhoneNumber");
					this.OnContactPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferredBy", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ReferredBy
		{
			get
			{
				return this._ReferredBy;
			}
			set
			{
				if ((this._ReferredBy != value))
				{
					this.OnReferredByChanging(value);
					this.SendPropertyChanging();
					this._ReferredBy = value;
					this.SendPropertyChanged("ReferredBy");
					this.OnReferredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedToUserId", DbType="Int NOT NULL")]
		public int AssignedToUserId
		{
			get
			{
				return this._AssignedToUserId;
			}
			set
			{
				if ((this._AssignedToUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignedToUserIdChanging(value);
					this.SendPropertyChanging();
					this._AssignedToUserId = value;
					this.SendPropertyChanged("AssignedToUserId");
					this.OnAssignedToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnLead_CrmTrnActivity", Storage="_CrmTrnActivities", ThisKey="Id", OtherKey="LDId")]
		public EntitySet<CrmTrnActivity> CrmTrnActivities
		{
			get
			{
				return this._CrmTrnActivities;
			}
			set
			{
				this._CrmTrnActivities.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmTrnLead_CrmTrnSalesDelivery", Storage="_CrmTrnSalesDeliveries", ThisKey="Id", OtherKey="LDId")]
		public EntitySet<CrmTrnSalesDelivery> CrmTrnSalesDeliveries
		{
			get
			{
				return this._CrmTrnSalesDeliveries;
			}
			set
			{
				this._CrmTrnSalesDeliveries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmMstProduct_CrmTrnLead", Storage="_CrmMstProduct", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public CrmMstProduct CrmMstProduct
		{
			get
			{
				return this._CrmMstProduct.Entity;
			}
			set
			{
				CrmMstProduct previousValue = this._CrmMstProduct.Entity;
				if (((previousValue != value) 
							|| (this._CrmMstProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmMstProduct.Entity = null;
						previousValue.CrmTrnLeads.Remove(this);
					}
					this._CrmMstProduct.Entity = value;
					if ((value != null))
					{
						value.CrmTrnLeads.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("CrmMstProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnLead", Storage="_MstUser", ThisKey="AssignedToUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.CrmTrnLeads.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.CrmTrnLeads.Add(this);
						this._AssignedToUserId = value.Id;
					}
					else
					{
						this._AssignedToUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnLead1", Storage="_MstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.CrmTrnLeads1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.CrmTrnLeads1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnLead2", Storage="_MstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.CrmTrnLeads2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.CrmTrnLeads2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnLead = this;
		}
		
		private void detach_CrmTrnActivities(CrmTrnActivity entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnLead = null;
		}
		
		private void attach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnLead = this;
		}
		
		private void detach_CrmTrnSalesDeliveries(CrmTrnSalesDelivery entity)
		{
			this.SendPropertyChanging();
			entity.CrmTrnLead = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CrmTrnSoftwareDevelopment")]
	public partial class CrmTrnSoftwareDevelopment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SDNumber;
		
		private System.DateTime _SDDate;
		
		private int _ProductId;
		
		private string _Issue;
		
		private string _IssueType;
		
		private string _Remarks;
		
		private int _AssignedToUserId;
		
		private System.DateTime _TargetDateTime;
		
		private System.DateTime _CloseDateTime;
		
		private string _Status;
		
		private bool _IsLocked;
		
		private int _CreatedByUserId;
		
		private System.DateTime _CreatedDateTime;
		
		private int _UpdatedByUserId;
		
		private System.DateTime _UpdatedDateTime;
		
		private EntityRef<CrmMstProduct> _CrmMstProduct;
		
		private EntityRef<MstUser> _MstUser;
		
		private EntityRef<MstUser> _MstUser1;
		
		private EntityRef<MstUser> _MstUser2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSDNumberChanging(string value);
    partial void OnSDNumberChanged();
    partial void OnSDDateChanging(System.DateTime value);
    partial void OnSDDateChanged();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnIssueChanging(string value);
    partial void OnIssueChanged();
    partial void OnIssueTypeChanging(string value);
    partial void OnIssueTypeChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnAssignedToUserIdChanging(int value);
    partial void OnAssignedToUserIdChanged();
    partial void OnTargetDateTimeChanging(System.DateTime value);
    partial void OnTargetDateTimeChanged();
    partial void OnCloseDateTimeChanging(System.DateTime value);
    partial void OnCloseDateTimeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsLockedChanging(bool value);
    partial void OnIsLockedChanged();
    partial void OnCreatedByUserIdChanging(int value);
    partial void OnCreatedByUserIdChanged();
    partial void OnCreatedDateTimeChanging(System.DateTime value);
    partial void OnCreatedDateTimeChanged();
    partial void OnUpdatedByUserIdChanging(int value);
    partial void OnUpdatedByUserIdChanged();
    partial void OnUpdatedDateTimeChanging(System.DateTime value);
    partial void OnUpdatedDateTimeChanged();
    #endregion
		
		public CrmTrnSoftwareDevelopment()
		{
			this._CrmMstProduct = default(EntityRef<CrmMstProduct>);
			this._MstUser = default(EntityRef<MstUser>);
			this._MstUser1 = default(EntityRef<MstUser>);
			this._MstUser2 = default(EntityRef<MstUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SDNumber
		{
			get
			{
				return this._SDNumber;
			}
			set
			{
				if ((this._SDNumber != value))
				{
					this.OnSDNumberChanging(value);
					this.SendPropertyChanging();
					this._SDNumber = value;
					this.SendPropertyChanged("SDNumber");
					this.OnSDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDDate", DbType="DateTime NOT NULL")]
		public System.DateTime SDDate
		{
			get
			{
				return this._SDDate;
			}
			set
			{
				if ((this._SDDate != value))
				{
					this.OnSDDateChanging(value);
					this.SendPropertyChanging();
					this._SDDate = value;
					this.SendPropertyChanged("SDDate");
					this.OnSDDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._CrmMstProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Issue
		{
			get
			{
				return this._Issue;
			}
			set
			{
				if ((this._Issue != value))
				{
					this.OnIssueChanging(value);
					this.SendPropertyChanging();
					this._Issue = value;
					this.SendPropertyChanged("Issue");
					this.OnIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IssueType
		{
			get
			{
				return this._IssueType;
			}
			set
			{
				if ((this._IssueType != value))
				{
					this.OnIssueTypeChanging(value);
					this.SendPropertyChanging();
					this._IssueType = value;
					this.SendPropertyChanged("IssueType");
					this.OnIssueTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssignedToUserId", DbType="Int NOT NULL")]
		public int AssignedToUserId
		{
			get
			{
				return this._AssignedToUserId;
			}
			set
			{
				if ((this._AssignedToUserId != value))
				{
					if (this._MstUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAssignedToUserIdChanging(value);
					this.SendPropertyChanging();
					this._AssignedToUserId = value;
					this.SendPropertyChanged("AssignedToUserId");
					this.OnAssignedToUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime TargetDateTime
		{
			get
			{
				return this._TargetDateTime;
			}
			set
			{
				if ((this._TargetDateTime != value))
				{
					this.OnTargetDateTimeChanging(value);
					this.SendPropertyChanging();
					this._TargetDateTime = value;
					this.SendPropertyChanged("TargetDateTime");
					this.OnTargetDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CloseDateTime
		{
			get
			{
				return this._CloseDateTime;
			}
			set
			{
				if ((this._CloseDateTime != value))
				{
					this.OnCloseDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CloseDateTime = value;
					this.SendPropertyChanged("CloseDateTime");
					this.OnCloseDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit NOT NULL")]
		public bool IsLocked
		{
			get
			{
				return this._IsLocked;
			}
			set
			{
				if ((this._IsLocked != value))
				{
					this.OnIsLockedChanging(value);
					this.SendPropertyChanging();
					this._IsLocked = value;
					this.SendPropertyChanged("IsLocked");
					this.OnIsLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserId", DbType="Int NOT NULL")]
		public int CreatedByUserId
		{
			get
			{
				return this._CreatedByUserId;
			}
			set
			{
				if ((this._CreatedByUserId != value))
				{
					if (this._MstUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserId = value;
					this.SendPropertyChanged("CreatedByUserId");
					this.OnCreatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDateTime
		{
			get
			{
				return this._CreatedDateTime;
			}
			set
			{
				if ((this._CreatedDateTime != value))
				{
					this.OnCreatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreatedDateTime = value;
					this.SendPropertyChanged("CreatedDateTime");
					this.OnCreatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedByUserId", DbType="Int NOT NULL")]
		public int UpdatedByUserId
		{
			get
			{
				return this._UpdatedByUserId;
			}
			set
			{
				if ((this._UpdatedByUserId != value))
				{
					if (this._MstUser2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUpdatedByUserIdChanging(value);
					this.SendPropertyChanging();
					this._UpdatedByUserId = value;
					this.SendPropertyChanged("UpdatedByUserId");
					this.OnUpdatedByUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime UpdatedDateTime
		{
			get
			{
				return this._UpdatedDateTime;
			}
			set
			{
				if ((this._UpdatedDateTime != value))
				{
					this.OnUpdatedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDateTime = value;
					this.SendPropertyChanged("UpdatedDateTime");
					this.OnUpdatedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CrmMstProduct_CrmTrnSoftwareDevelopment", Storage="_CrmMstProduct", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public CrmMstProduct CrmMstProduct
		{
			get
			{
				return this._CrmMstProduct.Entity;
			}
			set
			{
				CrmMstProduct previousValue = this._CrmMstProduct.Entity;
				if (((previousValue != value) 
							|| (this._CrmMstProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CrmMstProduct.Entity = null;
						previousValue.CrmTrnSoftwareDevelopments.Remove(this);
					}
					this._CrmMstProduct.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSoftwareDevelopments.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(int);
					}
					this.SendPropertyChanged("CrmMstProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSoftwareDevelopment", Storage="_MstUser", ThisKey="AssignedToUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser
		{
			get
			{
				return this._MstUser.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser.Entity;
				if (((previousValue != value) 
							|| (this._MstUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser.Entity = null;
						previousValue.CrmTrnSoftwareDevelopments.Remove(this);
					}
					this._MstUser.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSoftwareDevelopments.Add(this);
						this._AssignedToUserId = value.Id;
					}
					else
					{
						this._AssignedToUserId = default(int);
					}
					this.SendPropertyChanged("MstUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSoftwareDevelopment1", Storage="_MstUser1", ThisKey="CreatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser1
		{
			get
			{
				return this._MstUser1.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser1.Entity;
				if (((previousValue != value) 
							|| (this._MstUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser1.Entity = null;
						previousValue.CrmTrnSoftwareDevelopments1.Remove(this);
					}
					this._MstUser1.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSoftwareDevelopments1.Add(this);
						this._CreatedByUserId = value.Id;
					}
					else
					{
						this._CreatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MstUser_CrmTrnSoftwareDevelopment2", Storage="_MstUser2", ThisKey="UpdatedByUserId", OtherKey="Id", IsForeignKey=true)]
		public MstUser MstUser2
		{
			get
			{
				return this._MstUser2.Entity;
			}
			set
			{
				MstUser previousValue = this._MstUser2.Entity;
				if (((previousValue != value) 
							|| (this._MstUser2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MstUser2.Entity = null;
						previousValue.CrmTrnSoftwareDevelopments2.Remove(this);
					}
					this._MstUser2.Entity = value;
					if ((value != null))
					{
						value.CrmTrnSoftwareDevelopments2.Add(this);
						this._UpdatedByUserId = value.Id;
					}
					else
					{
						this._UpdatedByUserId = default(int);
					}
					this.SendPropertyChanged("MstUser2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
